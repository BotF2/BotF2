<!--File:DiplomacyScreen.xaml-->
<scc:ThemedUserControl x:Class="Supremacy.Client.Views.DiplomacyScreen.NewDiplomacyScreen"
                       x:Name="_self"
                       x:FieldModifier="private"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                       xmlns:s="http://schemas.startreksupremacy.com/xaml/core"
                       xmlns:sx="http://schemas.startreksupremacy.com/xaml/core/markup"
                       xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                       xmlns:Views="clr-namespace:Supremacy.Client.Views"
                       xmlns:scc="http://schemas.startreksupremacy.com/xaml/presentation"
                       xmlns:DiplomacyScreen="clr-namespace:Supremacy.Client.Views"
                       xmlns:client="clr-namespace:Supremacy.Client"
                       xmlns:diplomacyScreen="clr-namespace:Supremacy.Client.Views.DiplomacyScreen"

                       mc:Ignorable="d"
                       d:DesignHeight="764"
                       d:DesignWidth="1280"
                       d:DataContext="{x:Static scc:DiplomacyScreenViewModel.DesignInstance}">

    <!--2023-06-04 > does this makes trouble ... reports System.Windows.Data Error -->
    <!--next: if Diplomacy > 'Overview' (outcommented + did show Graph) > show Graph = Visible, otherwise 'Hidden'-->
    <i:Interaction.Behaviors>
        <scc:VisibilityGroupScopeBehavior VisibilityGroup="DiplomacyScreenVisibilityScopes.RelationshipGraph" 
                                          Visibility="{Binding Path=DisplayMode, Converter={scc:SimpleCase Case=Overview, IfMatch=Visible, Else=Hidden}}" />
        <!--<scc:VisibilityGroupScopeBehavior VisibilityGroup="DiplomacyScreenVisibilityScopes.RelationshipGraph" Visibility="Hidden"/>-->
        <scc:VisibilityGroupScopeBehavior VisibilityGroup="DiplomacyScreenVisibilityScopes.Default" 
                                          Visibility="{Binding Path=DisplayMode, Converter={scc:SimpleCase Case=Overview, IfMatch=Hidden, Else=Visible}}" />
        <!--<scc:VisibilityGroupScopeBehavior VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"  
        Visibility="Hidden"/>-->
    </i:Interaction.Behaviors>

    <Control.Resources>
        <scc:LocalizedEnumStringConverter x:Key="LocalizedEnumStringConverter" />

        <Style TargetType="{x:Type xcdg:DataGridControl}">
            <Setter Property="Background"
            Value="Transparent" />
            <Setter Property="Foreground"
            Value="{StaticResource DefaultTextBrush}" />
            <Setter Property="FontFamily"
            Value="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}" />
            <Setter Property="FontSize"
            Value="12pt" />
            <Setter Property="BorderBrush"
            Value="{x:Null}" />
            <Setter Property="BorderThickness"
            Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xcdg:DataGridControl}">
                        <Border Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}">
                            <AdornerDecorator>
                                <xcdg:TableViewScrollViewer x:Name="PART_ScrollViewer"
                                          ShowRowSelectorPane="False"
                                          xcdg:GroupLevelIndicatorPane.ShowIndicators="False"
                                          ScrollViewer.VerticalScrollBarVisibility="Visible">
                                    <ItemsPresenter />
                                </xcdg:TableViewScrollViewer>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RemoveMessageElementButtonStyle"
             TargetType="{x:Type Button}">
            <Setter Property="Width"
                Value="21" />
            <Setter Property="Height"
                Value="21" />
            <Setter Property="Focusable"
                Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder"
                                  Background="{StaticResource AzureGradient_Top_Bottom}"
                                  CornerRadius="8"
                                  Width="16"
                                  Height="16">
                            <Canvas Width="16"
                                   Height="16">
                                <Path Canvas.Left="0"
                                      Canvas.Top="0"
                                      Width="16"
                                      Height="16"
                                      Stretch="None"
                                      StrokeThickness="2.0"
                                      StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round"
                                      StrokeMiterLimit="2"
                                      Stroke="#FF000000"
                                      Data="F1 M 5.67,5.67L 11.33,11.33" />
                                <Path Canvas.Left="0"
                                      Canvas.Top="0"
                                      Width="21"
                                      Height="21"
                                      Stretch="None"
                                      StrokeThickness="2.0"
                                      StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round"
                                      StrokeMiterLimit="2"
                                      Stroke="#FF000000"
                                      Data="F1 M 11.33,5.67L 5.67,11.33" />
                            </Canvas>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                      Value="True">
                                <Setter TargetName="ButtonBorder"
                                        Property="Background"
                                        Value="{StaticResource BlueHoverGradient_Top_Bottom}" />
                                <Setter Property="IsEnabled" Value="True" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                      Value="True">
                                <Setter TargetName="ButtonBorder"
                                        Property="Background"
                                        Value="{StaticResource AzureGradient_Bottom_Top}" />
                                <Setter Property="IsEnabled" Value="True" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SummaryButtonStyle"
             TargetType="{x:Type Button}">
            <Setter Property="Width"
                Value="140" />
            <Setter Property="Height"
                Value="35" />
            <Setter Property="Focusable"
                Value="False" />
            <Setter Property="Margin" Value="2,2,2,2">
            </Setter>
        </Style>

        <Style x:Key="DiploButtonStyle"
             TargetType="{x:Type Button}">
            <Setter Property="Width"
                Value="140" />
            <Setter Property="Height"
                Value="35" />
            <Setter Property="OverridesDefaultStyle"
                Value="False" />
            <Setter Property="Focusable"
                Value="False" />
            <Setter Property="Margin" Value="2,2,2,2">
            </Setter>
        </Style>

        <!--<Style TargetType="{x:Type scc:GameButton }" x:Key="specificButton">

            <Setter Property="BorderThickness" Value="5" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" >
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="Yellow" Offset="0.0" />
                        <GradientStop Color="Red" Offset="0.25" />
                        <GradientStop Color="Blue" Offset="0.75" />
                        <GradientStop Color="LimeGreen" Offset="1.0" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>-->

        <!--DiplomacyMessageElement-->
        <DataTemplate DataType="{x:Type scc:DiplomacyMessageElement}">
            <DockPanel LastChildFill="True"
                   HorizontalAlignment="Left">
                <Button DockPanel.Dock="Right"
                      Command="{Binding Path=RemoveCommand}"
                      CommandParameter="{Binding}"
                      Style="{StaticResource RemoveMessageElementButtonStyle}"
                      VerticalAlignment="Top"
                      Visibility="{Binding Path=IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}"
                      IsEnabled="{Binding Path=IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Margin="6,-1,0,-1" />
                <scc:RichTextBlock Grid.Column="0"
                             RichText="{Binding Path=Description}"
                                   FontSize="18" FontWeight="Bold"
                                   Foreground="MediumAquamarine"
                                   Background="Black"
                             TextWrapping="Wrap" />
            </DockPanel>
        </DataTemplate>

        <!--ActiveAgreementViewModel-->
        <DataTemplate DataType="{x:Type scc:ActiveAgreementViewModel}">
            <DockPanel LastChildFill="True">
                <scc:RichTextBlock DockPanel.Dock="Top"
                             Margin="0,0,0,0"
                             RichText="{Binding Path=Description}"
                             TextWrapping="Wrap" />
                <ItemsControl Margin="24,0,0,0"
                            ItemsSource="{Binding Path=Elements}"
                            HorizontalContentAlignment="Center"
                            Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                            FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                            FontSize="16" />
            </DockPanel>
        </DataTemplate>

        <!--CreditsDataViewModel-->
        <DataTemplate x:Key="{x:Type scc:CreditsDataViewModel}"
                    DataType="{x:Type scc:CreditsDataViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"
                              MinWidth="75" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--<TextBlock Text="Immediate Payment"-->
                <TextBlock Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='OneTurnTransferText'}"
                         TextWrapping="NoWrap"
                         VerticalAlignment="Center" Margin="0,0,20,0"
                         TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                         TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                         TextBlock.FontSize="12pt" />
                <RepeatButton Grid.Row="0"
                        Grid.Column="1"
                        Command="{x:Static scc:RangeBar.DecrementCommand}"
                        CommandTarget="{Binding ElementName=ImmediateRangeBar}"
                        IsEnabled="{Binding ElementName=ImmediateRangeBar}"
                        Style="{DynamicResource BlockBarDecrementButtonStyle}" />
                <scc:RangeBar x:Name="ImmediateRangeBar"
                        Grid.Row="0"
                        Grid.Column="2"
                        BlockCount="40"
                        BlockMargin="2"
                        Margin="2,0"
                        IsSnappingEnabled="True"
                        Minimum="{Binding Path=Minimum, Mode=OneWay}"
                        Maximum="{Binding Path=Maximum, Mode=OneWay}"
                        Value="{Binding Path=ImmediateAmount, Mode=TwoWay}"
                        SmallChange="{Binding Path=ImmediateStepSize, Mode=OneWay}"
                        LargeChange="{Binding Path=ImmediateStepSize, Mode=OneWay}" />
                <RepeatButton Grid.Row="0"
                        Grid.Column="3"
                        Command="{x:Static scc:RangeBar.IncrementCommand}"
                        CommandTarget="{Binding ElementName=ImmediateRangeBar}"
                        IsEnabled="{Binding ElementName=ImmediateRangeBar}"  
                        Style="{DynamicResource BlockBarIncrementButtonStyle}" />
                <TextBlock Grid.Row="0"
                             Grid.Column="4"
                             Text="{Binding Path=ImmediateAmount, Mode=OneWay, StringFormat='#,0'}"
                             TextWrapping="NoWrap"
                             VerticalAlignment="Center" Margin="20,0,0,0"
                             TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                             TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                             TextBlock.FontSize="12pt" />
                
                
                <!--No RecurringPayment anymore-->
                <!--<TextBlock Grid.Row="1"
                             Text="Recurring Payment"
                             TextWrapping="NoWrap"
                             VerticalAlignment="Center"
                             TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                             TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                             TextBlock.FontSize="12pt" />-->
                <!--<RepeatButton Grid.Row="1"
                            Grid.Column="1"
                            Command="{x:Static scc:RangeBar.DecrementCommand}"
                            CommandTarget="{Binding ElementName=RecurringRangeBar}"
                            IsEnabled="{Binding ElementName=RecurringRangeBar}"
                            Style="{DynamicResource BlockBarDecrementButtonStyle}" />
                <scc:RangeBar x:Name="RecurringRangeBar"
                            Grid.Row="1"
                            Grid.Column="2"
                            BlockCount="40"
                            BlockMargin="2"
                            Margin="2,0"
                            IsSnappingEnabled="True"
                            Minimum="{Binding Path=Minimum, Mode=OneWay}"
                            Maximum="{Binding Path=Maximum, Mode=OneWay}"
                            Value="{Binding Path=RecurringAmount, Mode=TwoWay}"
                            SmallChange="{Binding Path=RecurringStepSize, Mode=OneWay}"
                            LargeChange="{Binding Path=RecurringStepSize, Mode=OneWay}" />
                <RepeatButton Grid.Row="1"
                            Grid.Column="3"
                            Command="{x:Static scc:RangeBar.IncrementCommand}"
                            CommandTarget="{Binding ElementName=RecurringRangeBar}"
                            IsEnabled="{Binding ElementName=RecurringRangeBar}"     
                            Style="{DynamicResource BlockBarIncrementButtonStyle}" />-->
                <!--<TextBlock Grid.Row="1"
                             Grid.Column="4"
                             Text="{Binding Path=RecurringAmount, Mode=OneWay, StringFormat='#,0'}"
                             TextWrapping="NoWrap"
                             VerticalAlignment="Center"
                             TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                             TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                             TextBlock.FontSize="12pt" />-->
            </Grid>
        </DataTemplate>

        <!--CommBorderBrush-->
        <SolidColorBrush x:Key="CommBorderBrush" Color="#FF848484" />
                      
        <!--Gray-->

        <LinearGradientBrush x:Key="CommBackgroundBrush"
                           EndPoint="0.5,0.0"
                           StartPoint="0.5,1.0"
                           MappingMode="RelativeToBoundingBox"
                           Opacity="0.5">

            <GradientStop Color="#FF818181"
                      Offset="0" />
            <!--Gray-->
            <GradientStop Color="#FF323232"
                      Offset="1" />
            <!--Black-->
        </LinearGradientBrush>

        <DataTemplate x:Key="StipulationTreeHeaderTemplate">
            <TextBlock Text="{Binding Path=Name, Converter={StaticResource UpperCaseConverter}}"
                   Foreground="{StaticResource HeaderTextBrush}"
                   FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                   Margin="0,8,0,0" />
        </DataTemplate>

        <!--could be 'open Border Treaty' to select-->
        <DataTemplate x:Key="StipulationTreeItemTemplate"
                    DataType="{x:Type scc:DiplomacyMessageAvailableElement}">
            <TextBlock Foreground="{StaticResource DefaultTextBrush}"
                       FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                       Margin="8,4,0,0">
          <Hyperlink Command="{Binding Path=AddCommand}"
                     Foreground="{StaticResource DefaultTextBrush}">
            <TextBlock Text="{Binding Path=Description}" />
          </Hyperlink>
        </TextBlock>
        </DataTemplate>

    </Control.Resources>

    <scc:GamePopupSite >
        <Border Background="#66000000">
            <Grid SnapsToDevicePixels="True"
                    Margin="6"
                    Background="Black">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="28" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="28" />
                    <ColumnDefinition Width="187" />
                    <ColumnDefinition Width="28" />
                    <ColumnDefinition Width="28" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="56" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <!--<RowDefinition Height="*"/>-->

                </Grid.RowDefinitions>

                <!--UpperLeftbox-->
                <Border x:Name="UpperLeftbox"
                        Grid.Column="0"
                        Grid.ColumnSpan="1"
                        Grid.Row="0"
                        Grid.RowSpan="1"
                        Margin="0,58,0,0"
                        Width="168"
                        VerticalAlignment="Stretch"
                        Background="Gray"/>
                <!-- Upper Left Corner -->
                <Path x:Name="UpperLeftCorner"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Width="168"
                        VerticalAlignment="Stretch"
                        Fill="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                        Data="F1 M 0,56L 0,24C 0,17.6348 2.52857,11.5303 7.02944,7.02944C 11.5303,2.52857 17.6348,0 24,0L 168,0L 168,28L 148,28C 143.582,28 140,31.5817 140,36L 140,56L 0,56 Z" />
                <!--<Rectangle x:Name="UpperLeftBlackBand"
                           Grid.Column="0"
                           Grid.Row="2"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Stretch"
                           MaxHeight="20"
                           Fill="Red"/>-->
                <!-- Upper Left Buttons -->
                <StackPanel x:Name="UpperLeftButtons"
                    Grid.Column="0"
                    Grid.Row="1"
                    Orientation="Vertical">
                    <!-- the overview button, upper left top of list-->
                    <!--<scc:GameButton x:Name="PART_ViewButton_Overview"
                          Label="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='OverviewButtonText', CharacterCasing=Upper}"
                          DisplayMode="GroupedVertically"
                          ToolTip="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='OverviewButtonTooltipText'}"
                          Command="{Binding Path=SetDisplayModeCommand}"
                          IsChecked="{Binding RelativeSource={RelativeSource Self}, Path=CommandParameter.(scc:CheckableCommandParameter.IsChecked), Mode=TwoWay}"
                          Margin="0,2,0,0">
                        <scc:GameButton.CommandParameter>
                            <scc:CheckableCommandParameter InnerParameter="{x:Static scc:DiplomacyScreenDisplayMode.Overview}" />
                        </scc:GameButton.CommandParameter>
                    </scc:GameButton>-->
   
                    <scc:GameButton x:Name="PART_ViewButton_Outbox"
                          Label="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='OutboxButtonText', CharacterCasing=Upper}"
                          DisplayMode="GroupedVertically"
                          ToolTip="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='OutboxButtonTooltipText'}"
                          Command="{Binding Path=SetDisplayModeCommand}"
                          IsChecked="{Binding RelativeSource={RelativeSource Self}, Path=CommandParameter.(scc:CheckableCommandParameter.IsChecked), Mode=TwoWay}"
                          Margin="0,2,0,2">
                        <scc:GameButton.CommandParameter>
                            <scc:CheckableCommandParameter InnerParameter="{x:Static scc:DiplomacyScreenDisplayMode.Outbox}" />
                        </scc:GameButton.CommandParameter>
                    </scc:GameButton>
                    
                    <!--next one is a COMMON button for all empires-->
                            <!--Background="{StaticResource Dom2Gradient_Bottom_Top}"-->               
                    <scc:GameButton x:Name="SummaryButton"                             
                            DisplayMode="GroupedVertically"
                            Label="{scc:StringResource Key=SUMMARY_BUTTON_TEXT}" 
                            FontSize="12pt"

                            FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                            Foreground="Black"
                            Margin="0,0,0,0"
                            Command="{x:Static scc:ClientCommands.ShowEndOfTurnSummary}"></scc:GameButton>
                </StackPanel>
                
                <!-- Upper Left Side -->
                <Grid x:Name="UpperLeftSide"
                      Grid.Column="0"
                      Grid.Row="2"
                      Grid.RowSpan="{Binding Path=DisplayMode, Converter={scc:SimpleCase Case=Overview, IfMatch=5, Else=1}}"
                      Margin="0,0,0,0">
                    <Border Background="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                          BorderThickness="0"
                          Width="69"
                          Height="Auto"
                          HorizontalAlignment="Left" />
                    <Border Background="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                          BorderThickness="0"
                          Width="69"
                          Height="Auto"
                          HorizontalAlignment="Right" />
                </Grid>

                <!-- Lower-Upper Left Corner -->
                <Path x:Name="LowerUpperLeftCorner"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Grid.Row="3"                  
                      scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                      Width="168"
                      Height="40"
                      Fill="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                      Margin="0,0,0,0"
                      Data="F1 M 0,0L 0,16C 0,22.3652 2.52857,28.4697 7.02944,32.9706C 11.5303,37.4714 17.6348,40 24,40L 168,40L 168,27.0263L 148,27.0263C 143.582,27.0263 140,23.4446 140,19.0263L 140,0L 0,0 Z" />

                <!-- Upper-Middle Left Horizontal Divider -->
                <Border x:Name="UpperMiddleLeftHorizontalDivider"
                    Grid.Column="2"
                    Grid.Row="3"
                    scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                    Background="{StaticResource AzureGradient_Top_Bottom}"
                    Height="13"
                    Margin="2,0,2,0"
                    VerticalAlignment="Bottom" />

                <!-- Upper-Middle Right Horizontal Divider -->
                <Border x:Name="UpperMiddleRightHorizontalDivider"
                    Grid.Column="4"
                    Grid.Row="3"
                    scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                    Background="{StaticResource AzureGradient_Top_Bottom}"
                    Height="13"
                    Margin="2,0,2,0"
                    VerticalAlignment="Bottom" />

                <!-- Lower-Middle Right Horizontal Divider -->
                <Border x:Name="LowerMiddleRightHorizontalDivider"
                    Grid.Column="4"
                    Grid.Row="4"
                    scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                    Background="{StaticResource Card5Gradient_Top_Bottom}"
                    Height="13"
                    Margin="2,2,2,0"
                    VerticalAlignment="Top" />

                <!-- Lower-Middle Splitter Column -->
                <Path x:Name="UpperCenterDivider"
                      Grid.Column="3"
                      Grid.Row="3"
                      Grid.RowSpan="2"
                      scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                      Width="28"
                      Height="42"
                      Fill="{StaticResource {x:Static scc:ClientResources.ImageBorderBrushKey}}"
                      Margin="0,0,0,13"
                      VerticalAlignment="Bottom"
                      Data="F1 M 0,0L 0,27.9954C 1.85621,27.9954 3.6364,28.7328 4.94894,30.0454C 6.26148,31.3579 6.99886,33.1381 6.99886,34.9943L 6.99886,41.9932L 20.9966,41.9932L 20.9966,34.9943C 20.9966,33.1381 21.734,31.3579 23.0465,30.0454C 24.359,28.7328 26.1392,27.9954 27.9954,27.9954L 27.9954,0L 0,0 Z" />
                <Border x:Name="MiddleCenterDivider"
                        Grid.Column="3"
                        Grid.Row="4"
                        Grid.RowSpan="4"
                        scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                        Background="{StaticResource Card5Gradient_Left_Right}"
                        Width="14"
                        Margin="0,31,0,44" />
                <Path x:Name="LowerCenterDivider"
                      Grid.Column="3"
                      Grid.Row="7"
                      scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                      Width="28"
                      Height="42"
                      Fill="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                      Margin="0,0,0,0"
                      VerticalAlignment="Bottom"
                      Data="F1M0,41.9932L0,13.9977C1.85621,13.9977 3.6364,13.2603 4.94894,11.9478 6.26148,10.6353 6.99886,8.85507 6.99886,6.99886L6.99886,0 20.9966,0 20.9966,6.99886C20.9966,8.85508 21.734,10.6353 23.0465,11.9478 24.359,13.2603 26.1392,13.9977 27.9954,13.9977L27.9954,41.9932 0,41.9932z" />


                <!--<Border x:Name="LowerLeftCorner"
                        Grid.Column="0"
                        Grid.Row="7"
                        Grid.ColumnSpan="1"
                        Background="{StaticResource AzureGradient_BottomLeft_TopRight}"
                        Height="28"
                        Margin="2,0,2,0"
                        VerticalAlignment="Bottom" />-->

                <Path x:Name="LowerLeftCorner"
                      Grid.Column="0"
                      Grid.ColumnSpan="1"
                      Grid.Row="7"                  
                      scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                      VerticalAlignment="Bottom" 
                      Height="28"
                      Fill="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                      Margin="0,0,0,0"
                      Data="F1 M 0,0L 0,6C 0,16 2.52857,20.4697 7,25C 11,28 17,28 24,28L 140,28L 140,0L 0,0 Z" />

                <!-- Lower-Left Horizontal Divider -->

                
                <Border x:Name="LowerLeftHorizontalDivider"
                        Grid.Column="1"
                        Grid.Row="7"
                        Grid.ColumnSpan="2"
                        Background="{StaticResource {x:Static scc:ClientResources.ImageBorderBrushKey}}"
                        Height="28"
                        Margin="2,0,2,0"
                        VerticalAlignment="Bottom" />

                <!-- Lower-Right Horizontal Divider -->
                <Border x:Name="LowerRightHorizontalDivider"
                        Grid.Column="4"
                        Grid.Row="7"
                        scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                        Background="{StaticResource {x:Static scc:ClientResources.ImageBorderBrushKey}}"
                        Height="28"
                        Margin="2,0,2,0"
                        VerticalAlignment="Bottom" />

                <Border x:Name="UpperRightbox"
                        Grid.Column="6"
                        Grid.ColumnSpan="1"
                        Grid.Row="0"
                        Grid.RowSpan="1"
                        Margin="0,58,0,0"
                        Width="28"
                        VerticalAlignment="Stretch"
                        Background="Gray"/>

                <!-- Upper Right Corner -->
                <Path x:Name="UpperRightCorner"
                        Grid.Column="5"
                        Grid.ColumnSpan="2"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        VerticalAlignment="Top"
                        Width="56"
                        Height="56"
                        Fill="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                        Data="F1 M 0,0L 28,0C 35.4261,0 42.548,2.94999 47.799,8.20101C 53.05,13.452 56,20.5739 56,28L 56,56L 28,56L 28,35.7251C 28,33.6282 27.1481,31.6212 25.6396,30.1646C 24.1312,28.708 22.0957,27.9267 20,28L 0,28L 0,0 Z" />

                <!-- Lower-Upper Right Corner -->
                <Path x:Name="LowerUpperRightCorner"
                      Grid.Column="5"
                      Grid.ColumnSpan="2"
                      Grid.Row="3"
                      scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                      Width="56"
                      Height="40"
                      Fill="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                      Margin="0,2,0,0"
                      Data="F1 M 0,40L 40,40C 48.8366,40 56,32.8366 56,24L 56,0L 28,0L 28,19C 28,23.4183 24.4183,27 20,27L 0,27L 0,40 Z" />

                <!-- Upper-Lower Right Corner -->
                <Path x:Name="UpperLowerRightCorner"
                      Grid.Column="5"
                      Grid.ColumnSpan="2"
                      Grid.Row="4"
                      scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                      Width="168"
                      Height="40"
                      Fill="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                      Margin="0,2,0,0"
                      Data="F1 M 0,0L 40,0C 48.8366,0 56,7.16344 56,16L 56,40L 28,40L 28,21C 28,16.5817 24.4183,13 20,13L 0,13L 0,0 Z" />

                <!-- Upper Right Side -->
                <Border x:Name="UpperRightSide"
                        Grid.Column="6"
                        Grid.Row="1"
                        Grid.RowSpan="{Binding Path=DisplayMode, Converter={scc:SimpleCase Case=Overview, IfMatch=7, Else=2}}"
                        Margin="{Binding Path=DisplayMode, Converter={scc:SimpleCase Case=Overview, IfMatch='0,2,0,50', Else='0,2,0,0'}}"
                        Background="{StaticResource {x:Static scc:ClientResources.ImageBorderBrushKey}}"
                        Height="Auto" />

                <!-- Lower Right Side -->
                <Border x:Name="LowerRightSide"
                        Grid.Column="6"
                        Grid.Row="5"
                        Grid.RowSpan="3"
                        scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                        Background="{StaticResource {x:Static scc:ClientResources.ImageBorderBrushKey}}"
                        Height="Auto"
                        Margin="0,2,0,50" />

                <!-- Lower Right Corner -->
                <Path x:Name="LowerRightCorner"
                      Grid.Column="5"
                      Grid.ColumnSpan="2"
                      Grid.Row="7"
                      Width="56"
                      Height="48"
                      Fill="{StaticResource Card5Gradient_TopLeft_BottomRight}"
                      Margin="0,2,0,0"
                      VerticalAlignment="Bottom"
                      Data="F1 M 0,48L 28,48C 35.4261,48 42.548,45.05 47.799,39.799C 53.05,34.548 56,27.4261 56,20L 56,0L 28,0L 28,12.2749C 28,14.3718 27.1481,16.3788 25.6396,17.8354C 24.1312,19.292 22.0957,20.0733 20,20L 0,20L 0,48 Z" />

                <!--BoolCellEditor-->
                <Grid Grid.Column="2"
                      Grid.ColumnSpan="3"
                      Grid.Row="0"
                      Grid.RowSpan="4"
                      Margin="2,0,2,15">
                    <Grid.Resources>
                        <DataTemplate x:Key="BoolCellEditor">
                            <TextBlock x:Name="ValueText"
                                         Text="No"
                                         Foreground="#FFB90E0A" Visibility="Hidden" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding}"
                                            Value="True">
                                    <Setter TargetName="ValueText"
                                            Property="TextBlock.Text"
                                            Value="Yes" />
                                    <Setter TargetName="ValueText"
                                            Property="TextBlock.Foreground"
                                            Value="Lime" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Grid.Resources>
                    <Grid>
                        <!--PART_CivilizationList-->
                        <xcdg:DataGridControl x:Name="PART_CivilizationList"
                                scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                                Background="Transparent"
                                Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                FontSize="{StaticResource {x:Static scc:ClientResources.DefaultFontSizeKey}}"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                ReadOnly="True"
                                MinHeight="280"
                                MaxHeight="280"
                                SelectionMode="Single"
                                ItemsSource="{Binding Path=ForeignPowers}"
                                SelectedItem="{Binding Path=SelectedForeignPower, Mode=TwoWay}"
                                AutoCreateColumns="False"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Focusable="True"
                                xcdg:Cell.IsCellFocusScope="False"
                                KeyboardNavigation.TabNavigation="None"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                KeyboardNavigation.ControlTabNavigation="None"
                                KeyboardNavigation.AcceptsReturn="False">
                                <!--<xcdg:Column FieldName="Location" - no !!
                                         Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=Location, CharacterCasing=Upper}"
                                         Width="150"
                                         DisplayMemberBinding="{Binding Path=Counterparty.Location, Mode=OneWay}"
                                         IsMainColumn="True"
                                         VisiblePosition="0" />-->                            
                            <xcdg:DataGridControl.Columns>

                                <xcdg:Column FieldName="Counterparty.LongName"
                                         Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=Civilization, CharacterCasing=Upper}"
                                         Width="150"
                                         DisplayMemberBinding="{Binding Path=Counterparty.LongName, Mode=OneWay}"
                                         IsMainColumn="True"
                                         VisiblePosition="0" />
                                <xcdg:Column FieldName="Status"
                                         Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=Status, CharacterCasing=Upper}"
                                         Width="200"
                                         DisplayMemberBinding="{Binding Path=Status, Mode=OneWay, Converter={StaticResource LocalizedEnumStringConverter}}"
                                         ReadOnly="True"
                                         VisiblePosition="1">
                                </xcdg:Column>
                                <xcdg:Column FieldName="TurnsSinceLastStatusChange"
                                         Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=Turns, CharacterCasing=Upper}"
                                         Width="96"
                                         DisplayMemberBinding="{Binding Path=TurnsSinceLastStatusChange, Mode=OneWay}"
                                         VisiblePosition="2" />

                                <!--Attitude-->
                                <!--<xcdg:Column FieldName="EffectiveRegard"
                                        Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=EffectiveRegard, CharacterCasing=Upper}"
                                        DisplayMemberBinding="{Binding Path=EffectiveRegard, Mode=OneWay, Converter={StaticResource LocalizedEnumStringConverter}}"
                                        VisiblePosition="3" />-->

                                <!--OutgoingMessageCategory-->
                                <xcdg:Column FieldName="OutgoingMessageCategory"
                                    Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=Outgoing, CharacterCasing=Upper}"
                                    Width="150"
                                    ReadOnly="True"
                                    VisiblePosition="4"
                                    DisplayMemberBinding="{Binding Path=OutgoingMessageCategory, Converter={StaticResource LocalizedEnumStringConverter}}" />
                                
                                <xcdg:Column FieldName="IncomingMessageCategory"
                                         Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=Incoming, CharacterCasing=Upper}"
                                         Width="150"
                                         ReadOnly="True"
                                         VisiblePosition="5"
                                         DisplayMemberBinding="{Binding Path=IncomingMessageCategory, Converter={StaticResource LocalizedEnumStringConverter}}" />
                                
                                <xcdg:Column FieldName="Regard"
                                         Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=Regard, CharacterCasing=Upper}"
                                         Width="100"
                                         ReadOnly="True"
                                         VisiblePosition="6"
                                         DisplayMemberBinding="{Binding Path=CounterpartyRegard.CurrentValue, Mode=OneWay}" />
                                
                                <xcdg:Column FieldName="Trust"
                                         Title="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=Trust, CharacterCasing=Upper}"
                                         Width="100"
                                         ReadOnly="True"
                                         VisiblePosition="6"
                                         DisplayMemberBinding="{Binding Path=CounterpartyTrust.CurrentValue, Mode=OneWay}" />
                            </xcdg:DataGridControl.Columns>
                            
                            <xcdg:DataGridControl.View>
                                <xcdg:TableView ShowFixedColumnSplitter="False"
                                            ShowRowSelectorPane="False"
                                            xcdg:GroupLevelIndicatorPane.ShowIndicators="False"
                                            HorizontalGridLineThickness="0"
                                            HorizontalGridLineBrush="Transparent"
                                            VerticalGridLineThickness="0"
                                            VerticalGridLineBrush="Transparent">
                                    <xcdg:TableView.FixedHeaders>
                                        <!--<xcdg:ClearHeadersFooters />-->
                                        <DataTemplate>
                                            <xcdg:ColumnManagerRow AllowSort="True"
                                           AllowColumnReorder="True" />
                                        </DataTemplate>
                                    </xcdg:TableView.FixedHeaders>
                                </xcdg:TableView>
                            </xcdg:DataGridControl.View>
                        </xcdg:DataGridControl>
                    </Grid>
                </Grid>

                <!--
        ================================================================================
         Lower - Main Content Area
        ================================================================================ 
        -->
                <DockPanel x:Name="ForeignPowerShortName"
                           scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                           Grid.Column="0"                         
                           Grid.Row="6"
                           Grid.ColumnSpan="2"
                           Visibility="Visible"
                           LastChildFill="True"
                           Margin="15,-30,0,0">

                    <!--
          ================================================================================
            Embassy Banner
          ================================================================================
          -->
                    <Border DockPanel.Dock="Top"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Left"
                            Background="{StaticResource CommBackgroundBrush}"
                            BorderBrush="{StaticResource CommBorderBrush}"
                            BorderThickness="2"
                            CornerRadius="8"
                            Padding="2"
                            Width="Auto"
                            Height="30">
                        <!--
              ================================================================================
                Foreign Power short name
              ================================================================================
              -->
                        <TextBlock x:Name="SelectedCiv"
                                    TextAlignment="Left"
                                    VerticalAlignment="Top"
                                    TextWrapping="Wrap"
                                    TextTrimming="CharacterEllipsis"
                                    FontSize="17pt"
                                    FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                    Foreground="Aqua"
                                    Background="Black"
                                    FontWeight="Normal"
                                    Margin="5,-2,5,0">
                            <!--Foreground="LightGoldenrodYellow"-->
                            <TextBlock.Text>
                                <Binding Path="SelectedForeignPower.Counterparty.ShortName"
                                                 Converter="{StaticResource UpperCaseConverter}" />
                            </TextBlock.Text>
                        </TextBlock>
                    </Border>
                </DockPanel>
                
                 <!--Send Edit Cancel buttons--> 
                <DockPanel x:Name="SendEditCancel"
                           scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                           Grid.Column="2"  
                           Grid.ColumnSpan="2"
                           Grid.Row="6"
                           Visibility="Visible"
                           VerticalAlignment="Center"
                           LastChildFill="True"
                           Margin="150,-30,0,0">
                    <StackPanel Orientation="Horizontal">
                       
                        <Button Name="SendButton" Content="SEND" Margin="2,0,5,0"
                            Command="{Binding Path=SendMessageCommand}"
                            IsEnabled="{Binding Path=SendMessageCommand}"     
                            MinWidth="150" MaxWidth="151" MaxHeight="28"/>


                        <Button Name="EditButton" Content="EDIT" Margin="2,0,5,0"
                            Command="{Binding Path=EditMessageCommand}"
                            IsEnabled="{Binding Path=EditMessageCommand}"    
                            MinWidth="150" MaxWidth="151" MaxHeight="28"/>


                        <Button Name="CancelButton" Content="CANCEL" Margin="2,0,2,0" 
                            Command="{Binding Path=CancelMessageCommand}"
                            IsEnabled="{Binding Path=CancelMessageCommand}"    
                            MinWidth="150" MaxWidth="151" MaxHeight="28"/>
                        <!--<Button x:Name="EndWarButton"
                              Content="End War"
                              MinWidth="150"
                              MaxWidth="151"
                              MaxHeight="28"
                              Margin="2,0,2,0"
                              ToolTip="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='EndWarButtonTooltipText', CharacterCasing=Upper}"
                              Command="{Binding Path=CeaseFireCommand}"
                              IsEnabled="{Binding Path=CeaseFireCommand}">
                      </Button>-->
                    </StackPanel>
                </DockPanel>
                
                <!--this holds the complete bottom stuff - row is Auto due to the separetor--> 
                <DockPanel Grid.Column="0"
                           Grid.ColumnSpan="3"                          
                           Grid.Row="5"
                           Visibility="Visible"
                           LastChildFill="True"
                           VerticalAlignment="Top"
                           MinHeight="460"
                           MaxHeight="460"
                           Margin="0,-45,0,0">
                    <!--MaxHeight="446"-->
                    <!--
          ================================================================================
            Tabbed Content but now just one Tab used for agreements, in box and out box
          ================================================================================
          -->
                    <TabControl SelectedIndex="{Binding Path=DisplayMode, Converter={x:Static scc:EnumToInt32Converter.Instance}}">
                        <TabControl.Template>
                            <ControlTemplate TargetType="TabControl">
                                <Border>
                                    <ContentPresenter Content="{TemplateBinding SelectedContent}" />
                                </Border>
                            </ControlTemplate>
                        </TabControl.Template>

                        <!--
            ================================================================================
              Active Agreements
            ================================================================================ 
            -->
                        <TabItem>
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                            VerticalScrollBarVisibility="Auto">
                                <DockPanel LastChildFill="True"
                                            Margin="0,10,5,0">
                                    <StackPanel Orientation="Vertical">
                                        <Border Padding="2"
                                                MinHeight="45"
                                                MaxHeight="120"
                                                Background="{StaticResource CommBackgroundBrush}"
                                                BorderBrush="{StaticResource CommBorderBrush}"
                                                BorderThickness="2"
                                                CornerRadius="8"
                                                DataContext="{Binding Path=SelectedForeignPower}">
                                            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                                          VerticalScrollBarVisibility="Auto">
                                                <StackPanel Orientation="Vertical" >
                                                    <StackPanel Orientation="Horizontal" >
                                                        <TextBlock DockPanel.Dock="Top"
                                                                   Grid.Column="0"
                                                                   Grid.Row="0"
                                                                    TextAlignment="Left"
                                                                    TextWrapping="Wrap"
                                                                    TextTrimming="CharacterEllipsis"
                                                                    FontSize="15pt"
                                                                    FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                                    Foreground="{StaticResource HeaderTextBrush}"
                                                                    Margin="2,0,10,0"
                                                                    Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=ActiveAgreementsHeader, CharacterCasing=Upper}" />
                                                        <StackPanel>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <TextBlock DockPanel.Dock="Top"
                                                                           Grid.Column="0"
                                                                           Grid.Row="0"
                                                                            TextAlignment="Left"
                                                                            TextWrapping="Wrap"
                                                                            TextTrimming="CharacterEllipsis"
                                                                            FontSize="15pt"
                                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                                            Foreground="Aqua"
                                                                            Margin="5,0,10,0"
                                                                            Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=MemberHeader, CharacterCasing=Upper}" 
                                                                            Visibility="{Binding Path=MemberMessage, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}"/>
                                                                <TextBlock DockPanel.Dock="Top"
                                                                           Grid.Column="0"
                                                                           Grid.Row="0"
                                                                            TextAlignment="Left"
                                                                            TextWrapping="Wrap"
                                                                            TextTrimming="CharacterEllipsis"
                                                                            FontSize="15pt"
                                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                                            Foreground="Red"
                                                                            Margin="5,0,10,0"
                                                                            Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=AtWarHeader, CharacterCasing=Upper}" 
                                                                            Visibility="{Binding Path=AtWarMessage, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}"/>
                                                                <TextBlock DockPanel.Dock="Top"
                                                                           Grid.Column="0"
                                                                           Grid.Row="0"
                                                                            TextAlignment="Left"
                                                                            TextWrapping="Wrap"
                                                                            TextTrimming="CharacterEllipsis"
                                                                            FontSize="15pt"
                                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                                            Foreground="LightCyan"
                                                                            Margin="5,0,10,0"
                                                                            Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=AlliesHeader, CharacterCasing=Upper}" 
                                                                            Visibility="{Binding Path=AlliesMessage, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}"/>
                                                                <TextBlock DockPanel.Dock="Top"
                                                                           Grid.Column="0"
                                                                           Grid.Row="0"
                                                                            TextAlignment="Left"
                                                                            TextWrapping="Wrap"
                                                                            TextTrimming="CharacterEllipsis"
                                                                            FontSize="15pt"
                                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                                            Foreground="LightCyan"
                                                                            Margin="5,0,10,0"
                                                                            Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=AffiliatedHeader, CharacterCasing=Upper}" 
                                                                            Visibility="{Binding Path=AffiliatedMessage, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}"/>
                                                                <TextBlock DockPanel.Dock="Top"
                                                                            Grid.Column="0"
                                                                            Grid.Row="0"
                                                                            TextAlignment="Left"
                                                                            TextWrapping="Wrap"
                                                                            TextTrimming="CharacterEllipsis"
                                                                            FontSize="15pt"
                                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                                            Foreground="Aqua"
                                                                            Background="Black"
                                                                            Margin="5,0,10,0"
                                                                            VerticalAlignment="Center"
                                                                            Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=SelectForeignPowerHeader}" 
                                                                            Visibility="{Binding Path=SelectForeignPowerMessage, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}"/>
                                                            </Grid>
                                                        </StackPanel>
                                                    </StackPanel>
                                                    <ItemsControl ItemsSource="{Binding Path=ActiveAgreements}"
                                                                  Grid.Column="0"
                                                                  Grid.Row="1"
                                                                   Margin="5,0,0,0"  
                                                                    HorizontalContentAlignment="Left"
                                                                    VerticalContentAlignment="Top"
                                                                    Foreground="{StaticResource {x:Static scc:ClientResources.HeaderTextForegroundBrushKey}}"
                                                                    FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                    FontSize="16">
                                                        <ItemsControl.Resources >
                                                            <Style TargetType="{x:Type Hyperlink}"

                                                                   BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground"
                                                                        Value="{StaticResource {x:Static scc:ClientResources.HeaderTextForegroundBrushKey}}" />
                                                                <Setter Property="IsEnabled"
                                                                        Value="False" />
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                        <!--
          ============================
          In Box
          ============================
          -->
                                        <Border Padding="2"
                                                MinHeight="2"
                                                Background="{StaticResource CommBackgroundBrush}"
                                                BorderBrush="{StaticResource CommBorderBrush}"
                                                BorderThickness="2"
                                                CornerRadius="8"
                                                Margin="0,2,0,2"
                                                DataContext="{Binding Path=SelectedForeignPower.IncomingMessage}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="210"/>
                                                    <ColumnDefinition Width="100"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
 
                                                <TextBlock Grid.Row="0"
                                                            Grid.Column="0"
                                                            TextAlignment="Left"
                                                            TextWrapping="Wrap"
                                                            TextTrimming="CharacterEllipsis"
                                                            FontSize="20"
                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                            Foreground="{StaticResource HeaderTextBrush}"
                                                            Margin="3,2,0,0"
                                                            Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=InboxHeader, CharacterCasing=Upper}" />
                                                <TextBlock Name="acceptReject"
                                                            Grid.Row="0"
                                                            Grid.Column="1"
                                                            TextAlignment="Left"
                                                            TextWrapping="Wrap"
                                                            TextTrimming="CharacterEllipsis"
                                                            FontSize="18"
                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                            Foreground="LimeGreen"
                                                            Margin="10,2,0,0"
                                                            Text="{Binding Path=Response, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <scc:GameButton x:Name="ButtonAccept" 
                                                                Grid.Row="0"
                                                                Grid.Column="2"
                                                                FontSize="16"                                                           
                                                                Command="{Binding Path=SetAcceptButton}"       
                                                                Label="ACCEPT"
                                                                Margin="50,0,5,5"
                                                                MinHeight="12"
                                                                MaxHeight="26"                                                               
                                                                Visibility="{Binding Path=HideAcceptReject, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}"/>
                                                <scc:GameButton x:Name="ButtonReject"
                                                                Grid.Row="0"
                                                                Grid.Column="3"
                                                                FontSize="16"                                                             
                                                                Command="{Binding Path=SetRejectButton}"
                                                                Margin="5,0,5,5"
                                                                MinHeight="12"
                                                                MaxHeight="26"
                                                                Label="REJECT"
                                                                Visibility="{Binding Path=HideAcceptReject, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}"/>
                                                <TextBlock Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=NoIncomingHeader, CharacterCasing=Upper}" 
                                                            Grid.Row="0"
                                                            Grid.Column="2"
                                                            Grid.ColumnSpan="2"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Top"
                                                            Height="25"
                                                            Visibility="{Binding Path=HideAcceptRejectButtons, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}"
                                                            TextWrapping="NoWrap"
                                                            TextBlock.Foreground="Black" 
                                                            TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                            TextBlock.FontSize="14pt"
                                                            Background="DarkGray"
                                                            Margin="0,0,0,0" />
                                                <ContentPresenter TextBlock.Foreground="{StaticResource DefaultTextBrush}"
                                                                    TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                    TextBlock.FontSize="16"
                                                                    Margin="0,0,0,0" />
                                                <StackPanel Orientation="Horizontal"
                                                            Grid.Row="1"
                                                            Grid.Column="0"
                                                            Grid.ColumnSpan="5">
                                                    <TextBlock Text="{Binding Path=TreatyLeadInText}"
                                                                    Visibility="{Binding Path=HasTreatyLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                    TextWrapping="Wrap"
                                                                    TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                                    TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                    TextBlock.FontSize="12pt"
                                                                    Margin="10,5,0,0" />
                                                    
                                                    <ItemsControl Margin="5,12,0,0"
                                                                    ItemsSource="{Binding Path=TreatyElements}"
                                                                    HorizontalContentAlignment="Center"
                                                                    Foreground="DodgerBlue"
                                                                    FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                    FontSize="16"
                                                                    Visibility="{Binding Path=TreatyElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                        BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.DodgerBlue}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                    
                                                    <TextBlock Text="{Binding Path=OfferLeadInText}"
                                                                    Visibility="{Binding Path=HasOfferLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                    TextWrapping="Wrap"
                                                                    TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                                    TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                    TextBlock.FontSize="12pt"
                                                                    Margin="0,12,0,0" />
                                                    
                                                    <ItemsControl Margin="5,12,0,0"
                                                                        ItemsSource="{Binding Path=OfferElements}"
                                                                        HorizontalContentAlignment="Center"
                                                                        Foreground="LimeGreen"
                                                                        FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                        FontSize="16"
                                                                        Visibility="{Binding Path=OfferElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                        BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.LimeGreen}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                    
                                                    <TextBlock Text="{Binding Path=RequestLeadInText}"
                                                                Visibility="{Binding Path=HasRequestLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                TextWrapping="Wrap"
                                                                TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                                TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                TextBlock.FontSize="12pt"
                                                                Margin="0,12,0,0" />
                                                    
                                                    <ItemsControl Margin="5,12,0,0"
                                                                    ItemsSource="{Binding Path=RequestElements}"
                                                                    HorizontalContentAlignment="Center"
                                                                    Foreground="#FFB90E0A"
                                                                    FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                    FontSize="16"
                                                                    Visibility="{Binding Path=RequestElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                        BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.Crimson}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                    
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                        <!--
                    =======================================================
                    OutBox Left - List of Proposals and Statments to send
                    =======================================================
                    -->
                                        <DockPanel LastChildFill="True"
                                                   Margin="0,0,2,0"
                                                   MaxHeight="335">
                                            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                                            VerticalScrollBarVisibility="Auto">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Border DockPanel.Dock="Left"
                                                            Grid.Column="0"
                                                            MinWidth="154"
                                                            MinHeight="45"
                                                            MaxHeight="335"
                                                            Margin="0,0,2,0"
                                                            Padding="5"
                                                            Background="{StaticResource CommBackgroundBrush}"
                                                            BorderBrush="{StaticResource CommBorderBrush}"
                                                            BorderThickness="2"
                                                            CornerRadius="8"
                                                            Visibility="Visible" 
                                                            IsEnabled="{Binding IsMessageEditInProgress, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <!--DEBUG Border.IsEnabled-->
                                                        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                                                  VerticalScrollBarVisibility="Auto">
                                                            <ItemsControl x:Name="OutgoingMessage_AvailableElements"
                                                                Background="Transparent"
                                                                    BorderBrush="{x:Null}"
                                                                    BorderThickness="0"
                                                                    Foreground="{StaticResource DefaultTextBrush}"
                                                                    FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                    FontSize="12pt"
                                                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                                    ItemTemplate="{StaticResource StipulationTreeItemTemplate}"
                                                                    ItemsSource="{Binding Path=SelectedForeignPower.OutgoingMessage.AvailableElements, Mode=OneWay}"
                                                                    IsEnabled="{Binding Path=SelectedForeignPower.OutgoingMessage.AvailableElements, Mode=OneWay}"
                                                                    Visibility="Visible">
                                                                <!--DEBUG ItemsControl.IsEnabled-->
                                                                <ItemsControl.GroupStyle>
                                                                    <GroupStyle HeaderTemplate="{StaticResource StipulationTreeHeaderTemplate}" />
                                                                </ItemsControl.GroupStyle>
                                                            </ItemsControl>
                                                        </ScrollViewer>
                                                    </Border>
                                                    <!--
                    =============================
                    Out Box Right
                    =============================
                     -->
                                                    <Border Padding="5" 
                                                            Grid.Column="1"
                                                            MinHeight="45"
                                                            MaxHeight="338"
                                                            Background="{StaticResource CommBackgroundBrush}"
                                                            BorderBrush="{StaticResource CommBorderBrush}"
                                                            BorderThickness="2"
                                                            CornerRadius="8"
                                                            DataContext="{Binding Path=SelectedForeignPower.OutgoingMessage}"
                                                            
                                                            Visibility="Visible">
                                                        <!-- 2024-04-21 DEBUG Border.IsEnabled >> IsEnabled="{Binding Path=SelectedForeignPower.OutgoingMessage}" -->

                                                        <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                                                      VerticalScrollBarVisibility="Auto">
                                                            <StackPanel Orientation="Vertical">
                                                                <StackPanel Orientation="Vertical">
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto"/>
                                                                        </Grid.RowDefinitions>
                                                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,0,8,0" TextAlignment="Left" VerticalAlignment="Center"
                                                                                    TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Visibility="Visible"
                                                                                    Foreground="Red" FontSize="18pt" FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                                                    Text="{Binding Path=IsEditing, Converter={scc:BooleanValueConverter TrueValue={sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=OutboxHeaderWhileEditing, CharacterCasing=Upper}, FalseValue={sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=OutboxHeader, CharacterCasing=Upper}}}">
                                                                        </TextBlock>
                                                                                     <!--Foreground="{StaticResource HeaderTextBrush}"-->
                                                                       
                                                                        
                                                                        <!--<TextBlock TextAlignment="Left"
                                                                                    Grid.Column="2"
                                                                                    Grid.Row="0"
                                                                                    TextWrapping="Wrap"            
                                                                                    TextTrimming="CharacterEllipsis"
                                                                                    FontSize="14pt"
                                                                                    Foreground="Red"
                                                                                    Margin="5,0,0,0"
                                                                                    Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=HeadsUpHeader}" 
                                                                                    Visibility="{Binding Path=IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->

                                                                        
                                                                        
                                                                        <!-- Send Edit Cancel buttons -->
                                                                        <!--<DockPanel x:Name="SendEditCancel"
                           scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                           Grid.Column="2"  
                           Grid.ColumnSpan="4"
                           Grid.Row="5"
                                                   
                           Visibility="Visible"
                           LastChildFill="True"
                           Margin="10,0,0,0">-->
                                                                            
                                                                            
                                                                            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">-->
                                                                                
                                                                                <!--Style="{StaticResource ButtonStyle}"--> 
                                                                                <!--<Button Content="SEND" Margin="2,0,5,0"
                            Command="{Binding Path=SendMessageCommand}"
                            IsEnabled="{Binding Path=SendMessageCommand}" />-->                                                   
                            <!--MinWidth="100" MaxWidth="131" MaxHeight="20"-->

                                                                                
                                                                                <!--<Button Content="EDIT" Margin="2,0,5,0"
                            Command="{Binding Path=EditMessageCommand}"
                            IsEnabled="{Binding Path=EditMessageCommand}"  />-->                                                  
                            <!--MinWidth="100" MaxWidth="131" MaxHeight="28"-->

                                                                                
                                                                                <!--<Button Content="CANCEL" Margin="2,0,2,0" 
                            IsEnabled="{Binding Path=CancelMessageCommand}"                                                            
                            Command="{Binding Path=CancelMessageCommand}"/>-->
                            <!--MinWidth="100" MaxWidth="131" MaxHeight="28"-->
                                                                                
                                                                                
                                                                                <!--<Button x:Name="EndWarButton"
                              Content="End War"
                              MinWidth="150"
                              MaxWidth="151"
                              MaxHeight="28"
                              Margin="2,0,2,0"
                              ToolTip="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='EndWarButtonTooltipText', CharacterCasing=Upper}"
                              Command="{Binding Path=CeaseFireCommand}"
                              IsEnabled="{Binding Path=CeaseFireCommand}">
                      </Button>-->
                                                                            <!--</StackPanel>-->
                                                                            
                                                                            
                                                                            <!--<TextBlock  Grid.Row="0" Grid.Column="2" Margin="10,0,0,0" TextAlignment="Left"
                                                                                    Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=SendHeader}"
                                                                                    Foreground="Red" FontSize="14pt" VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis"  
                                                                                    Visibility="{Binding Path=IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                                        </DockPanel>-->

                                                                    </Grid>
                                                                </StackPanel>
                                                                <ContentPresenter TextBlock.Foreground="{StaticResource DefaultTextBrush}"
                                                                                TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                                TextBlock.FontSize="16"
                                                                                Margin="0,0,0,0" />
                                                                <StackPanel Orientation="Vertical">
                                                                    <StackPanel.Resources>
                                                                        <Style TargetType="{x:Type Button}">
                                                                            <Setter Property="Width"
                                                                            Value="21" />
                                                                            <Setter Property="Height"
                                                                            Value="21" />
                                                                            <Setter Property="Visibility"
                                                                            Value="Visible"/>
                                                                            <Setter Property="Focusable"
                                                                            Value="False" />
                                                                            <Setter Property="IsEnabled" Value="True" />
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                        <Border x:Name="ButtonBorder"
                                                                                                Background="{StaticResource BlueGradient_Top_Bottom}"
                                                                                                CornerRadius="8"
                                                                                                Width="16"
                                                                                                Height="16">
                                                                                            <Canvas Width="16"
                                                                                                    Height="16">
                                                                                                <Path Canvas.Left="0"
                                                                                                        Canvas.Top="0"
                                                                                                        Width="16"
                                                                                                        Height="16"
                                                                                                        Stretch="None"
                                                                                                        StrokeThickness="2.0"
                                                                                                        StrokeStartLineCap="Round"
                                                                                                        StrokeEndLineCap="Round"
                                                                                                        StrokeMiterLimit="2"
                                                                                                        Stroke="#FF000000"
                                                                                                        Data="F1 M 5.67,5.67L 11.33,11.33" />
                                                                                                <Path Canvas.Left="0"
                                                                                                        Canvas.Top="0"
                                                                                                        Width="21"
                                                                                                        Height="21"
                                                                                                        Stretch="None"
                                                                                                        StrokeThickness="2.0"
                                                                                                        StrokeStartLineCap="Round"
                                                                                                        StrokeEndLineCap="Round"
                                                                                                        StrokeMiterLimit="2"
                                                                                                        Stroke="#FF000000"
                                                                                                        Data="F1 M 11.33,5.67L 5.67,11.33" />
                                                                                            </Canvas>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver"
                                                                                                        Value="True">
                                                                                                <Setter TargetName="ButtonBorder"
                                                                                                        Property="Background"
                                                                                                        Value="{StaticResource BlueHoverGradient_Top_Bottom}" />
                                                                                                <Setter Property="IsEnabled" Value="True" />
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsPressed"
                                                                                                    Value="True">
                                                                                                <Setter TargetName="ButtonBorder"
                                                                                                        Property="Background"
                                                                                                        Value="{StaticResource BlueGradient_Bottom_Top}" />
                                                                                                <Setter Property="IsEnabled" Value="True" />
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </StackPanel.Resources>
                                                                    
                                                                    <ItemsControl Margin="5,12,0,0"
                                                                                ItemsSource="{Binding Path=StatementElements}"
                                                                                HorizontalContentAlignment="Center"
                                                                                Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                                                FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                                FontSize="16"
                                                                                Visibility="{Binding Path=StatementElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                                        <ItemsControl.Resources>
                                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                                   BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                                <Setter Property="TextElement.Foreground">
                                                                                    <Setter.Value>
                                                                                        <SolidColorBrush Color="{Binding Source={x:Static scc:ClientResources.DefaultTextForegroundBrushKey}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </ItemsControl.Resources>
                                                                    </ItemsControl>
                                                                    
                                                                    <TextBlock Text="{Binding Path=TreatyLeadInText}"
                                                                            Visibility="{Binding Path=HasTreatyLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                            TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                            TextBlock.FontSize="12pt" Foreground="Aqua" TextWrapping="Wrap" Margin="5,12,0,0"
                                                                            />
                                                                            <!--TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"-->                                                                    
                                                                    
                                                                    <ItemsControl Margin="5,12,0,0"
                                                                            ItemsSource="{Binding Path=TreatyElements}"
                                                                            HorizontalContentAlignment="Center"
                                                                            Foreground="DodgerBlue"
                                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                            FontSize="16"
                                                                            Visibility="{Binding Path=TreatyElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                                        <ItemsControl.Resources>
                                                                            <Style TargetType="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                                <Setter Property="TextElement.Foreground">
                                                                                    <Setter.Value>
                                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.DodgerBlue}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </ItemsControl.Resources>
                                                                    </ItemsControl>
                                                                    
                                                                    <TextBlock Text="{Binding Path=OfferLeadInText}"
                                                                        Visibility="{Binding Path=HasOfferLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                        TextWrapping="Wrap"
                                                                        TextBlock.Foreground="Aqua"
                                                                        TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                        TextBlock.FontSize="12pt"
                                                                        Margin="5,12,0,0" />
                                                                    
                                                                    <ItemsControl Margin="5,12,0,0"
                                                                        ItemsSource="{Binding Path=OfferElements}"
                                                                        HorizontalContentAlignment="Center"
                                                                        Foreground="LimeGreen"
                                                                        FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                        FontSize="16"
                                                                        Visibility="{Binding Path=OfferElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                                        <ItemsControl.Resources>
                                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                            BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                                <Setter Property="TextElement.Foreground">
                                                                                    <Setter.Value>
                                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.LimeGreen}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </ItemsControl.Resources>
                                                                    </ItemsControl>
                                                                    
                                                                    <TextBlock Text="{Binding Path=RequestLeadInText}"
                                                                        Visibility="{Binding Path=HasRequestLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                        TextWrapping="Wrap"
                                                                        TextBlock.Foreground="Aqua"
                                                                        TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                        TextBlock.FontSize="12pt"
                                                                        Margin="5,12,0,0" />
                                                                    
                                                                    <ItemsControl Margin="5,12,0,0"
                                                                        ItemsSource="{Binding Path=RequestElements}"
                                                                        HorizontalContentAlignment="Center"
                                                                        Foreground="#FFB90E0A"
                                                                        FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                        FontSize="16"
                                                                        Visibility="{Binding Path=RequestElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                                        <ItemsControl.Resources>
                                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                            BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                                <Setter Property="TextElement.Foreground">
                                                                                    <Setter.Value>
                                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.Crimson}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </ItemsControl.Resources>
                                                                    </ItemsControl>
                                                                    
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Grid>
                                            </ScrollViewer>
                                        </DockPanel>
                                    </StackPanel>
                                </DockPanel>
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </DockPanel>
                <!--
            ================================================================================
              Old Inbound Messages
            ================================================================================ 
            -->
                <!--<TabItem>
                            <Border Margin="142,2,2,2" Height="195" VerticalAlignment="Center">
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                                VerticalScrollBarVisibility="Auto">
                                    <DockPanel LastChildFill="True"
                                             Margin="0,0,7,0">
                                                        <Border Padding="7"
                                                                Background="{StaticResource CommBackgroundBrush}"
                                                                BorderBrush="{StaticResource CommBorderBrush}"
                                                                BorderThickness="2"
                                                                CornerRadius="8"
                                                                DataContext="{Binding Path=SelectedForeignPower.IncomingMessage}">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock TextAlignment="Center"
                                                           TextWrapping="Wrap"
                                                           TextTrimming="CharacterEllipsis"
                                                           FontSize="28pt"
                                                           FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                           Foreground="{StaticResource HeaderTextBrush}"
                                                           Margin="0,0,0,0"
                                                           Text="{Binding Converter={scc:SimpleCase Case={x:Null}, IfMatch='', Else={sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=InboxHeader, CharacterCasing=Upper}}}" />
                                                <ContentPresenter TextBlock.Foreground="{StaticResource DefaultTextBrush}"
                                                                  TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                  TextBlock.FontSize="16"
                                                                  Margin="0,0,0,0" />               
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock Text="{Binding Path=TreatyLeadInText}"
                                                                 Visibility="{Binding Path=HasTreatyLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                 TextWrapping="Wrap"
                                                                 TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                                 TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                 TextBlock.FontSize="12pt"
                                                                 Margin="0,12,0,0" />       
                                                    <ItemsControl Margin="24,12,0,0"
                                        ItemsSource="{Binding Path=TreatyElements}"
                                        HorizontalContentAlignment="Center"
                                        Foreground="DodgerBlue"
                                        FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                        FontSize="16"
                                        Visibility="{Binding Path=TreatyElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                     BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.DodgerBlue}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                    <TextBlock Text="{Binding Path=OfferLeadInText}"
                                     Visibility="{Binding Path=HasOfferLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     TextWrapping="Wrap"
                                     TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                     TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                     TextBlock.FontSize="12pt"
                                     Margin="0,12,0,0" />
                                                    <ItemsControl Margin="24,12,0,0"
                                        ItemsSource="{Binding Path=OfferElements}"
                                        HorizontalContentAlignment="Center"
                                        Foreground="LimeGreen"
                                        FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                        FontSize="16"
                                        Visibility="{Binding Path=OfferElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                     BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.LimeGreen}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                    <TextBlock Text="{Binding Path=RequestLeadInText}"
                                     Visibility="{Binding Path=HasRequestLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     TextWrapping="Wrap"
                                     TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                     TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                     TextBlock.FontSize="12pt"
                                     Margin="0,12,0,0" />
                                                    <ItemsControl Margin="24,12,0,0"
                                        ItemsSource="{Binding Path=RequestElements}"
                                        HorizontalContentAlignment="Center"
                                        Foreground="#FFB90E0A"
                                        FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                        FontSize="16"
                                        Visibility="{Binding Path=RequestElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                     BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.Crimson}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </StackPanel>
                                        </Border>
                                    </DockPanel>
                                </ScrollViewer>
                            </Border>
                        </TabItem>-->

                <!--
            ================================================================================
              Old Outbound Messages
            ================================================================================ 
            -->
                <!--<TabItem>
                            <Border Margin="142,0,0,0" Height="120" VerticalAlignment="Bottom">
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Auto">
                                    <DockPanel LastChildFill="True"
                                              Margin="0,0,7,0">
                                        <Border DockPanel.Dock="Left"
                                                Width="220"
                                                Margin="0,0,8,0"
                                                Padding="7"
                                                Background="{StaticResource CommBackgroundBrush}"
                                                BorderBrush="{StaticResource CommBorderBrush}"
                                                BorderThickness="2"
                                                CornerRadius="8"
                                                Visibility="{Binding Path=IsMessageEditInProgress, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                IsEnabled="{Binding IsMessageEditInProgress, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            
                                            -->
                <!--Visibility="{Binding Path=IsMessageEditInProgress, Converter={StaticResource BooleanToVisibilityConverter}}"-->
                <!--
                                            <ItemsControl Background="Transparent"
                                                          BorderBrush="{x:Null}"
                                                          BorderThickness="0"
                                                          Foreground="{StaticResource DefaultTextBrush}"
                                                          FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                          FontSize="12pt"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                          ItemTemplate="{StaticResource StipulationTreeItemTemplate}"
                                                          ItemsSource="{Binding Path=SelectedForeignPower.OutgoingMessage.AvailableElements}"
                                                          IsEnabled="{Binding Path=SelectedForeignPower.OutgoingMessage.AvailableElements}">
                                                <ItemsControl.GroupStyle>
                                                    <GroupStyle HeaderTemplate="{StaticResource StipulationTreeHeaderTemplate}" />
                                                </ItemsControl.GroupStyle>
                                            </ItemsControl>
                                        </Border>
                                        <Border Padding="7"
                                                Background="{StaticResource CommBackgroundBrush}"
                                                BorderBrush="{StaticResource CommBorderBrush}"
                                                BorderThickness="2"
                                                CornerRadius="8"
                                                DataContext="{Binding Path=SelectedForeignPower.OutgoingMessage}"
                                                IsEnabled="{Binding Path=SelectedForeignPower.OutgoingMessage}">
                                            <StackPanel Orientation="Vertical">

                                                <TextBlock TextAlignment="Center"  
                                                      TextWrapping="Wrap"            
                                                      TextTrimming="CharacterEllipsis"
                                                      FontSize="18pt"
                                                      Foreground="{DynamicResource {x:Static scc:ClientResources.AlertTextForegroundBrushKey}}"
                                                      Margin="4"
                                                      Text="To send a message press the SEND button" />

                                                <TextBlock TextAlignment="Center"
                                                         TextWrapping="Wrap"
                                                         TextTrimming="CharacterEllipsis"
                                                         FontSize="28pt"
                                                         FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                                         Foreground="{StaticResource HeaderTextBrush}"
                                                         Margin="0,0,0,0"
                                                         Text="{Binding Path=IsEditing, Converter={scc:BooleanValueConverter TrueValue={sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=OutboxHeaderWhileEditing, CharacterCasing=Upper}, FalseValue={sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry=OutboxHeader, CharacterCasing=Upper}}}">
                                                </TextBlock>
                                                <ContentPresenter TextBlock.Foreground="{StaticResource DefaultTextBrush}"
                                          TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                          TextBlock.FontSize="16"
                                          Margin="0,0,0,0" />
                                                <StackPanel Orientation="Vertical">
                                                    <StackPanel.Resources>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Width"
                                                                    Value="21" />
                                                            <Setter Property="Height"
                                                                    Value="21" />
                                                            <Setter Property="Focusable"
                                                                    Value="False" />
                                                            <Setter Property="IsEnabled" Value="True" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <Border x:Name="ButtonBorder"
                                                                                Background="{StaticResource BlueGradient_Top_Bottom}"
                                                                                CornerRadius="8"
                                                                                Width="16"
                                                                                Height="16">
                                                                              <Canvas Width="16"
                                                                                Height="16">
                                                                              <Path Canvas.Left="0"
                                                                                Canvas.Top="0"
                                                                                Width="16"
                                                                                Height="16"
                                                                                Stretch="None"
                                                                                StrokeThickness="2.0"
                                                                                StrokeStartLineCap="Round"
                                                                                StrokeEndLineCap="Round"
                                                                                StrokeMiterLimit="2"
                                                                                Stroke="#FF000000"
                                                                                Data="F1 M 5.67,5.67L 11.33,11.33" />
                                                                              <Path Canvas.Left="0"
                                                                                Canvas.Top="0"
                                                                                Width="21"
                                                                                Height="21"
                                                                                Stretch="None"
                                                                                StrokeThickness="2.0"
                                                                                StrokeStartLineCap="Round"
                                                                                StrokeEndLineCap="Round"
                                                                                StrokeMiterLimit="2"
                                                                                Stroke="#FF000000"
                                                                                Data="F1 M 11.33,5.67L 5.67,11.33" />
                                                                            </Canvas>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver"
                                                                                      Value="True">
                                                                                <Setter TargetName="ButtonBorder"
                                                                                        Property="Background"
                                                                                        Value="{StaticResource BlueHoverGradient_Top_Bottom}" />
                                                                                <Setter Property="IsEnabled" Value="True" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed"
                                                                                      Value="True">
                                                                                <Setter TargetName="ButtonBorder"
                                                                                        Property="Background"
                                                                                        Value="{StaticResource BlueGradient_Bottom_Top}" />
                                                                                <Setter Property="IsEnabled" Value="True" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </StackPanel.Resources>
                                                    <ItemsControl Margin="24,12,0,0"
                                                                ItemsSource="{Binding Path=StatementElements}"
                                                                HorizontalContentAlignment="Center"
                                                                Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                                FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                FontSize="16"
                                                                Visibility="{Binding Path=StatementElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                    BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static scc:ClientResources.DefaultTextForegroundBrushKey}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                    <TextBlock Text="{Binding Path=TreatyLeadInText}"
                                                               Visibility="{Binding Path=HasTreatyLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                               TextWrapping="Wrap"
                                                               TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                               TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                               TextBlock.FontSize="12pt"
                                                               Margin="0,12,0,0" />
                                                    <ItemsControl Margin="24,12,0,0"
                                                                ItemsSource="{Binding Path=TreatyElements}"
                                                                HorizontalContentAlignment="Center"
                                                                Foreground="DodgerBlue"
                                                                FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                FontSize="16"
                                                                Visibility="{Binding Path=TreatyElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                    BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.DodgerBlue}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                    <TextBlock Text="{Binding Path=OfferLeadInText}"
                                                             Visibility="{Binding Path=HasOfferLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                             TextWrapping="Wrap"
                                                             TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                             TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                             TextBlock.FontSize="12pt"
                                                             Margin="0,12,0,0" />
                                                    <ItemsControl Margin="24,12,0,0"
                                                            ItemsSource="{Binding Path=OfferElements}"
                                                            HorizontalContentAlignment="Center"
                                                            Foreground="LimeGreen"
                                                            FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                            FontSize="16"
                                                            Visibility="{Binding Path=OfferElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                    BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.LimeGreen}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                    <TextBlock Text="{Binding Path=RequestLeadInText}"
                                                               Visibility="{Binding Path=HasRequestLeadInText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                               TextWrapping="Wrap"
                                                               TextBlock.Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                                               TextBlock.FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                               TextBlock.FontSize="12pt"
                                                               Margin="0,12,0,0" />
                                                    <ItemsControl Margin="24,12,0,0"
                                                                ItemsSource="{Binding Path=RequestElements}"
                                                                HorizontalContentAlignment="Center"
                                                                Foreground="#FFB90E0A"
                                                                FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                                                FontSize="16"
                                                                Visibility="{Binding Path=RequestElements.Count, Converter={scc:SimpleCase Case=0, IfMatch=Collapsed, Else=Visible}}">
                                                        <ItemsControl.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}"
                                                                   BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                                <Setter Property="TextElement.Foreground">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding Source={x:Static Colors.Crimson}, BindsDirectlyToSource=True, Converter={StaticResource LightColorConverter}}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </StackPanel>
                                        </Border>
                                    </DockPanel>
                                </ScrollViewer>
                            </Border>
                        </TabItem>-->
                <!--
        ================================================================================
          Foreign Power Info
        ================================================================================ 
        -->
                <StackPanel x:Name="RelationshipInfoPanel"
                            Grid.Column="4"
                            Grid.Row="5"
                            Grid.RowSpan="2"
                            scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.Default"
                            Orientation="Vertical"
                            DataContext="{Binding}"
                            Margin="7,-14,-14,0"
                            VerticalAlignment="Top">
                    <!--Race Image-->
                    <Border Width="194" Height="194"
                          Margin="-90,-350,0,0"
                          BorderBrush="{StaticResource {x:Static scc:ClientResources.ImageBorderBrushKey}}"
                          BorderThickness="2"
                          CornerRadius="12">
                        <Border.Background>
                            <ImageBrush ImageSource="{Binding Path=SelectedForeignPower.Counterparty, Converter={StaticResource CivImageConverter}}"
                          Stretch="UniformToFill" />
                        </Border.Background>
                        <Border.ToolTip>
                            <Image x:Name="InsigniaTooltip" Width="540" Height="540" Source="{Binding Path=SelectedForeignPower.Counterparty, Converter={StaticResource CivImageConverter}}" Margin="5,0,5,0"/>
                            <!--<Image ImageSource="{Binding Path=SelectedForeignPower.Counterparty, Converter={StaticResource CivImageConverter}}"
                          Stretch="UniformToFill" ima/>-->
                        </Border.ToolTip>
                    </Border>


                    <!-- Name -->
                    <TextBlock FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                     FontSize="24"
                     Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                     Text="{Binding Path=SelectedForeignPower.Counterparty.LongName, Converter={StaticResource UpperCaseConverter}}"
                     TextAlignment="Center"
                     TextWrapping="Wrap"
                     TextTrimming="CharacterEllipsis"
                     Margin="0,8,0,0" />

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="290" />
                        </Grid.RowDefinitions>

                        <!--Row 0 = Regard -->
                        <TextBlock Grid.Row="0" Grid.Column="0" 
                                   FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                   FontSize="21"
                                   Foreground="{StaticResource HeaderTextBrush}"
                                   Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='RegardMeterCaption', CharacterCasing=Upper}"
                                   TextAlignment="Right"
                                   TextWrapping="Wrap"
                                   TextTrimming="CharacterEllipsis"
                                   Margin="0,6,6,-1"
                                   VerticalAlignment="Center" />

                        <s:BlockBar 
                                Grid.Row="0"                            
                                Grid.Column="1"
                                IsReadOnly="True"
                                Height="21"
                                Margin="0,6,0,0"
                                BlockCount="30"
                                BlockMargin="2"
                                Minimum="{Binding Path=SelectedForeignPower.CounterpartyRegard.Minimum, Mode=OneWay}"
                                Maximum="{Binding Path=SelectedForeignPower.CounterpartyRegard.Maximum, Mode=OneWay}"
                                Value="{Binding Path=SelectedForeignPower.CounterpartyRegard.CurrentValue, Mode=OneWay}">
                            <s:BlockBar.ToolTip>
                                <MultiBinding Converter="{StaticResource StringFormatConverter}"
                                              ConverterParameter="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='RegardMeterTooltip'}">
                                    <Binding Path="SelectedForeignPower.CounterpartyRegard.CurrentValue" />
                                    <Binding Path="SelectedForeignPower.CounterpartyRegard.Maximum" />
                                </MultiBinding>
                            </s:BlockBar.ToolTip>
                        </s:BlockBar>

                        <TextBlock Grid.Row="0" Grid.Column="2"
                                    FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                     FontSize="18"
                                     Foreground="{StaticResource HeaderTextBrush}"
                                     Text="{Binding Path=SelectedForeignPower.CounterpartyRegard.CurrentValue}"
                                     TextAlignment="Right"
                                     TextWrapping="Wrap"
                                     TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Center" 
                                    Margin="6,6,0,0" />

                        <!--Row 1 = Trust-->
                        <TextBlock Grid.Row="1" Grid.Column="0"
                                   FontFamily="{StaticResource {x:Static scc:ClientResources.HeaderFontFamilyKey}}"
                                   FontSize="21"
                                   Foreground="{StaticResource HeaderTextBrush}"
                                   Text="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='TrustMeterCaption', CharacterCasing=Upper}"
                                   TextAlignment="Right"
                                   TextWrapping="Wrap"
                                   TextTrimming="CharacterEllipsis"
                                   Margin="0,3,6,8"
                                   VerticalAlignment="Center" />

                        <s:BlockBar Grid.Column="1"
                                    Grid.Row="1"
                                    IsReadOnly="True"
                                    Height="21"
                                    Margin="0,3,0,8"
                                    BlockCount="30"
                                    BlockMargin="2"
                                    Minimum="{Binding Path=SelectedForeignPower.CounterpartyTrust.Minimum, Mode=OneWay}"
                                    Maximum="{Binding Path=SelectedForeignPower.CounterpartyTrust.Maximum, Mode=OneWay}"
                                    Value="{Binding Path=SelectedForeignPower.CounterpartyTrust.CurrentValue, Mode=OneWay}">
                            <s:BlockBar.ToolTip>
                                <MultiBinding Converter="{StaticResource StringFormatConverter}"
                                              ConverterParameter="{sx:LocalizedString Group={x:Static s:LocalizedTextGroups.DiplomacyScreen}, Entry='TrustMeterTooltip'}">
                                    <Binding Path="SelectedForeignPower.CounterpartyTrust.CurrentValue" />
                                    <Binding Path="SelectedForeignPower.CounterpartyTrust.Maximum" />
                                </MultiBinding>
                            </s:BlockBar.ToolTip>
                        </s:BlockBar>

                        <TextBlock Grid.Row="1" Grid.Column="2"
                            FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                 FontSize="18"
                                 Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"
                                 Text="{Binding Path=SelectedForeignPower.CounterpartyTrust.CurrentValue}"
                                 TextAlignment="Center"
                                 TextWrapping="Wrap"
                                 TextTrimming="CharacterEllipsis"
                                 Margin="6,6,0,0" />

                        <!--Row 2 = Text-->
                        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!--MaxHeight="360"-->
                            <ScrollViewer VerticalScrollBarVisibility="Auto" >
                                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                                FontFamily="{StaticResource {x:Static scc:ClientResources.DefaultFontFamilyKey}}"
                                FontSize="18" 
                                Foreground="{StaticResource {x:Static scc:ClientResources.DefaultTextForegroundBrushKey}}"                        
                                Text="{Binding Path=SelectedForeignPower.CounterpartyDiplomacyReport}"
                                TextAlignment="Left"
                                TextWrapping="Wrap"
                                TextTrimming="CharacterEllipsis"
                                Margin="0,0,0,0"/>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </StackPanel>

                <!--
        ================================================================================
          Relationship Graph
        ================================================================================ 
        -->
                <!--<Grid Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="6">
                   --><!--scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.RelationshipGraph"--><!-- 
                    <Viewbox Stretch="Uniform"
                           StretchDirection="DownOnly"
                           SnapsToDevicePixels="True">
                        <s:NodeGraph NodesBindingPath="Children"
                         CenterObject="{Binding Path=SelectedGraphNode, Mode=TwoWay}"
                         PenSelector="{x:Static diplomacyScreen:DiplomacyGraphPenSelector.Instance}"
                         CoefficientOfDampening="1.0"
                         FrameRate="0.5"
                         Width="800px"
                         Height="640px" />
                    </Viewbox>
                </Grid>-->

                <!--<scc:GameButton Label="{s:StringResource Key=RESET_GRAPH, Case=Upper}"
                        Grid.Column="2"
                        Grid.Row="0"
                        HorizontalAlignment="Right"
                        MaxWidth="180"
                        scc:VisibilityGroupScopeBehavior.VisibilityGroup="DiplomacyScreenVisibilityScopes.RelationshipGraph"
                        Height="28"
                        DisplayMode="GroupedVertically"
                        Command="{Binding ResetGraphCommand}"
                        VerticalAlignment="Bottom"
                        Margin="0,0,2,0" />-->
                
            </Grid>
        </Border>
    </scc:GamePopupSite>
</scc:ThemedUserControl>
