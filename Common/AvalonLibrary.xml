<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AvalonLibrary</name>
    </assembly>
    <members>
        <member name="T:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension">
            <summary>
            Attempts to create a <see cref="T:System.Windows.Media.Effects.DropShadowBitmapEffect"/>.
            <remarks>
            Catches the security exception that's thrown in partial trust.
            </remarks>
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Creates the <see cref="T:System.Windows.Media.Effects.DropShadowBitmapEffect"/>.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension.Color">
            <summary>
            Gets or sets the color of the shadow.
            </summary>
            <value>
            The color of the shadow. The default value is FF000000 (black).
            </value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension.Direction">
            <summary>
            Gets or sets the angle at which the shadow is cast.
            </summary>
            <value>
            The angle at which the shadow is cast. The valid range of values is from
            0 through 360. The value 0 puts the direction immediately to the right of
            the object. Subsequent values move the direction around the object in a counter-clockwise
            direction. For example, a value of 90 indicates the shadow is cast directly
            upward from the object; a value of 180 is cast directly to the left of the
            object, and so on. The default value is 315.
            </value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension.Noise">
            <summary>
            Gets or sets the graininess, or "noise level," of the shadow.
            </summary>
            <value>
            The noise level of the shadow. The valid range of values is from 0 through
            1. A value of 0 indicates no noise and 1 indicates maximum noise. A value
            of 0.5 indicates 50 percent noise, a value of 0.75 indicates 75 percent noise,
            and so on. The default value is 0.
            </value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension.Opacity">
            <summary>
            Gets or sets the degree of opacity of the shadow.
            </summary>
            <value>
            The degree of opacity. The valid range of values is from 0 through 1. A value
            of 0 indicates that the shadow is completely transparent, and a value of
            1 indicates that the shadow is completely opaque. A value of 0.5 indicates
            the shadow is 50 percent opaque, a value of 0.725 indicates the shadow is
            72.5 percent opaque, and so on. Values less than 0 are treated as 0, while
            values greater than 1 are treated as 1. The default is 1.
            </value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension.ShadowDepth">
            <summary>
            Gets or sets the distance between the object and the shadow that it casts.
            </summary>
            <value>
            The distance between the plane of the object casting the shadow and the shadow
            plane measured in device-independent units (1/96th inch per unit). The valid
            range of values is from 0 through 300. The default is 5.
            </value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.DropShadowBitmapEffectExtension.Softness">
            <summary>
            Gets or sets the softness of the shadow
            </summary>
            <value>
            The shadow's softness. The valid range of values is from 0 through 1. A value
            of 0.0 indicates no softness (a sharply defined shadow) and 1.0 indicates
            maximum softness (a very diffused shadow). A value of 0.5 indicates 50 percent
            softness, a value of 0.75 indicates 75 percent softness, and so on. The default
            is 0.5.
            </value>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1">
            <summary>Represents a collection of <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> objects. </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> class.</summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Add(Avalon.Windows.Media.Animation.KeyFrame{`0})">
            <summary>Adds a <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> to the end of the collection. </summary>
            <returns>The index at which the keyFrame was added.</returns>
            <param name="item">The <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> to add to the end of the collection.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Contains(Avalon.Windows.Media.Animation.KeyFrame{`0})">
            <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/>. </summary>
            <returns>true if the collection contains keyFrame; otherwise, false.</returns>
            <param name="item">The <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> to locate in the collection.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.CopyTo(Avalon.Windows.Media.Animation.KeyFrame{`0}[],System.Int32)">
            <summary>Copies all of the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> objects in a collection to a specified array. </summary>
            <param name="array">Identifies the array to which content is copied.</param>
            <param name="arrayIndex">Index position in the array to which the contents of the collection are copied.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.GetEnumerator">
            <summary> Returns an enumerator that can iterate through the collection. </summary>
            <returns>An enumerator that can iterate through the collection.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary> Returns an enumerator that can iterate through the collection. </summary>
            <returns>An enumerator that can iterate through the collection.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.IndexOf(Avalon.Windows.Media.Animation.KeyFrame{`0})">
            <summary> Searches for the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> and returns the zero-based index of the first occurrence within the entire collection.</summary>
            <returns>The zero-based index of the first occurrence of keyFrame within the entire collection, if found; otherwise, -1.</returns>
            <param name="item">The <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> to locate in the collection.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Insert(System.Int32,Avalon.Windows.Media.Animation.KeyFrame{`0})">
            <summary>Inserts a <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> into a specific location within the collection. </summary>
            <param name="item">The <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> object to insert in the collection.</param>
            <param name="index">The index position at which the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> is inserted.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Remove(Avalon.Windows.Media.Animation.KeyFrame{`0})">
            <summary>Removes a <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> object from the collection. </summary>
            <param name="item">Identifies the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> to remove from the collection.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.RemoveAt(System.Int32)">
            <summary>Removes the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> at the specified index position from the collection. </summary>
            <param name="index">Index position of the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> to be removed.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Clone">
            <summary>Creates a modifiable clone of this <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
            <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"/> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"/> property was true.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.CloneCore(System.Windows.Freezable)">
            <summary>Makes this instance a deep copy of the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
            <param name="sourceFreezable">The <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> to clone.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
            <param name="sourceFreezable">The <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> to clone.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.CreateInstanceCore">
            <summary>Creates a new, frozen instance of <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/>.</summary>
            <returns>A frozen instance of <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/>.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.FreezeCore(System.Boolean)">
            <summary>Makes this instance of <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> unmodifiable or determines whether it can be made unmodifiable.</summary>
            <returns>If isChecking is true, this method returns true if the specified <see cref="T:System.Windows.Freezable"/> can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method returns true if the if the specified <see cref="T:System.Windows.Freezable"/> is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having made the actual change in frozen status to this object.</returns>
            <param name="isChecking">true if the <see cref="T:System.Windows.Freezable"/> instance should actually freeze itself when this method is called. false if the <see cref="T:System.Windows.Freezable"/> should simply return whether it can be frozen.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>Makes this instance a clone of the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> object. </summary>
            <param name="sourceFreezable">The <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> object to clone.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrameCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
            <param name="sourceFreezable">The <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/> to clone.</param>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Count">
            <summary>Gets the number of key frames contained in the <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/>.</summary>
            <returns>The number of key frames contained in the <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/>.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Empty">
            <summary> Gets an empty <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/>.  </summary>
            <returns>An empty <see cref="T:Avalon.Windows.Media.Animation.KeyFrameCollection`1"/>.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.IsFixedSize">
            <summary>Gets a value that indicates if the collection is frozen.</summary>
            <returns>true if the collection is frozen; otherwise, false.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.IsReadOnly">
            <summary> Gets a value that indicates if the collection is read-only.</summary>
            <returns>true if the collection is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.IsSynchronized">
            <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
            <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Item(System.Int32)">
            <summary>Gets or sets the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> at the specified index position.  </summary>
            <returns>The <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> at the specified index.</returns>
            <param name="index">The zero-based index of the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.-or-index is equal to or greater than <see cref="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Count"/>.</exception>
            <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen"/> property is true).</exception>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.SyncRoot">
            <summary> Gets an object that can be used to synchronize access to the collection. </summary>
            <returns>An object that can be used to synchronize access to the collection.</returns>
        </member>
        <member name="T:Avalon.Windows.Controls.ColumnStackPanel">
            <summary>
            Stacks elements in columns.
            <remarks>
            Not sure how useful this panel is. <see cref="T:Avalon.Windows.Controls.AutoGrid"/> can do similar things.
            Maybe if the RowOrdinal would be automatically calculated, it would be easier to use.
            </remarks>
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.ColumnStackPanel.ColumnCountProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.ColumnStackPanel.ColumnCount"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.ColumnStackPanel.GetStartColumn(System.Windows.DependencyObject)">
            <summary>
            Gets the start column.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.ColumnStackPanel.SetStartColumn(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the start column.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:Avalon.Windows.Controls.ColumnStackPanel.StartColumnProperty">
            <summary>
            Identifies the <c>StartColumn</c> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.ColumnStackPanel.GetEndColumn(System.Windows.DependencyObject)">
            <summary>
            Gets the end column.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.ColumnStackPanel.SetEndColumn(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the end column.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:Avalon.Windows.Controls.ColumnStackPanel.EndColumnProperty">
            <summary>
            Identifies the <c>EndColumn</c> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.ColumnStackPanel.GetRowOrdinal(System.Windows.DependencyObject)">
            <summary>
            Gets the row ordinal.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.ColumnStackPanel.SetRowOrdinal(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the row ordinal.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:Avalon.Windows.Controls.ColumnStackPanel.RowOrdinalProperty">
            <summary>
            Identifies the <c>RowOrdinal</c> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.ColumnStackPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for child elements.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.ColumnStackPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size.
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="P:Avalon.Windows.Controls.ColumnStackPanel.ColumnCount">
            <summary>
            Gets or sets the column count.
            </summary>
            <value>The column count.</value>
        </member>
        <member name="T:Avalon.Windows.SR">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.ArgumentValidator_EnumValueIsDefined">
            <summary>
              Looks up a localized string similar to Invalid enum value..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.ArgumentValidator_NotNullOrEmptyString">
            <summary>
              Looks up a localized string similar to String cannot be null or empty..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.ArgumentValidator_TypeIsAssignableFromType">
            <summary>
              Looks up a localized string similar to Incompatible type.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.DependencyHelpers_IncompatibleDPType">
            <summary>
              Looks up a localized string similar to Type of dependency property is incompatible with value..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.EnumHelper_InvalidObjectType">
            <summary>
              Looks up a localized string similar to Unrecognized enum type..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.EnumResourceTypeConverter_InvalidResourceManager">
            <summary>
              Looks up a localized string similar to Invalid resource manager..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.IAddChild_NoText">
            <summary>
              Looks up a localized string similar to Cannot add text children..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.IAddChild_TextOnly">
            <summary>
              Looks up a localized string similar to Cannot add non-text children..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.IAnimationCalculator_CreationFailed">
            <summary>
              Looks up a localized string similar to CreateCalculator implementation must return a value..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.KeyFramesAnimationBase_ChildNotKeyFrame">
            <summary>
              Looks up a localized string similar to Child must be a {0}KeyFrame..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.LinearAnimationBase_InvalidDefaultValue">
            <summary>
              Looks up a localized string similar to Invalid default value..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.NotifyIcon_NoNegativeTimeout">
            <summary>
              Looks up a localized string similar to Timeout cannot be negative..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_Buttons">
            <summary>
              Looks up a localized string similar to Buttons.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_CommandLinks">
            <summary>
              Looks up a localized string similar to Command Links.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_Content">
            <summary>
              Looks up a localized string similar to Content.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_ExpandedInformation">
            <summary>
              Looks up a localized string similar to Expanded Information.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_Footer">
            <summary>
              Looks up a localized string similar to Footer.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_MainInstruction">
            <summary>
              Looks up a localized string similar to Main Instruction.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_NoParent">
            <summary>
              Looks up a localized string similar to Cannot show a TaskDialog that already has a parent..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_RadioButtons">
            <summary>
              Looks up a localized string similar to Radio Buttons.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialog_WindowTitle">
            <summary>
              Looks up a localized string similar to Window Title.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialogButtonData_ButtonSingleValue">
            <summary>
              Looks up a localized string similar to Button must be a single value..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialogButtonData_SetStandardButton">
            <summary>
              Looks up a localized string similar to Cannot set properties on a standard button..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialogButtons_Cancel">
            <summary>
              Looks up a localized string similar to _Cancel.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialogButtons_Close">
            <summary>
              Looks up a localized string similar to C_lose.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialogButtons_No">
            <summary>
              Looks up a localized string similar to _No.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialogButtons_OK">
            <summary>
              Looks up a localized string similar to _OK.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialogButtons_Retry">
            <summary>
              Looks up a localized string similar to _Retry.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TaskDialogButtons_Yes">
            <summary>
              Looks up a localized string similar to _Yes.
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TypeExtension_ArgumentsWrongOrder">
            <summary>
              Looks up a localized string similar to Type arguments need to be specified in the right order..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TypeExtension_InvalidTypeArgumentCount">
            <summary>
              Looks up a localized string similar to Invalid type argument count in type..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TypeExtension_InvalidTypeName">
            <summary>
              Looks up a localized string similar to Invalid type name..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TypeExtension_InvalidTypeNameArgumentCount">
            <summary>
              Looks up a localized string similar to Invalid type argument count in type name..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TypeExtension_NoIXamlTypeResolver">
            <summary>
              Looks up a localized string similar to Cannot retrieve IXamlTypeResolver..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.TypeExtension_TypeOrNameMissing">
            <summary>
              Looks up a localized string similar to Must specify Type or TypeName..
            </summary>
        </member>
        <member name="P:Avalon.Windows.SR.UIHelpers_NoDispatcher">
            <summary>
              Looks up a localized string similar to Unable to find a Dispatcher..
            </summary>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.CornerRadiusAnimation">
            <summary> Animates the value of a CornerRadius property between two target values using linear interpolation over a specified Duration.</summary>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.LinearAnimationBase`1">
            <summary>
            Animates the value of a <typeparamref name="T"/> property between two target values using linear interpolation over a specified <see cref="T:Duration"/>.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.AnimationBase`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.AnimationBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.AnimationBase`1"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.AnimationBase`1.Clone">
            <summary>Creates a modifiable clone of this <see cref="T:AnimationBase{T}" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
            <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.AnimationBase`1.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
            <summary>Gets the current value of the animation.</summary>
            <returns>The current value of the animation.</returns>
            <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. If this animation is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous animation in the chain.</param>
            <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
            <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock"/> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"/> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"/> value to be used by the animation to generate its output value.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.AnimationBase`1.GetCurrentValue(`0,`0,System.Windows.Media.Animation.AnimationClock)">
            <summary>Gets the current value of the animation.</summary>
            <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. If this animation is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous animation in the chain.</param>
            <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
            <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock"/> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"/> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"/> value to be used by the animation to generate its output value.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.AnimationBase`1.GetCurrentValueCore(`0,`0,System.Windows.Media.Animation.AnimationClock)">
            <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
            <returns>The calculated value of the property, as determined by the current animation.</returns>
            <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
            <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
            <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock"/> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"/> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"/> used by the host animation.</param>
        </member>
        <member name="F:Avalon.Windows.Media.Animation.AnimationBase`1._calculator">
            <summary>
            The <see cref="T:Avalon.Windows.Media.Animation.IAnimationCalculator`1"/> instance for this type.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.AnimationBase`1.CreateCalculator">
            <summary>
            Creates the appropriate calculator for the animation type.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.AnimationBase`1.IsAdditive">
            <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
            <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.AnimationBase`1.IsCumulative">
            <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
            <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior"/> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.AnimationBase`1.TargetPropertyType">
            <summary>Gets the type of the target property associated with the animation.</summary>
            <returns>The type of the target property associated with the animation.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.AnimationBase`1.SafeCalculator">
            <summary>
            Gets the static instance of the calculator, without ensuring it exists.
            Should be called only when the object is sure to be initialized.
            </summary>
            <value>The calculator.</value>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.AnimationBase`1.Calculator">
            <summary>
            Gets the <see cref="T:Avalon.Windows.Media.Animation.IAnimationCalculator`1"/>.
            </summary>
            <value>The calculator.</value>
        </member>
        <member name="F:Avalon.Windows.Media.Animation.LinearAnimationBase`1.ByProperty">
            <summary> Identifies the By dependency property. </summary>
            <returns>The identifier for the By dependency property.</returns>
        </member>
        <member name="F:Avalon.Windows.Media.Animation.LinearAnimationBase`1.FromProperty">
            <summary> Identifies the From dependency property. </summary>
            <returns>The identifier for the From dependency property.</returns>
        </member>
        <member name="F:Avalon.Windows.Media.Animation.LinearAnimationBase`1.ToProperty">
            <summary> Identifies the To dependency property. </summary>
            <returns>The identifier for the To dependency property.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearAnimationBase`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearAnimationBase`1"/> class.</summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearAnimationBase`1.#ctor(`0,System.Windows.Duration)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearAnimationBase`1"/> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
            <param name="toValue">The destination value of the animation. </param>
            <param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearAnimationBase`1.#ctor(`0,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearAnimationBase`1"/> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
            <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
            <param name="toValue">The destination value of the animation. </param>
            <param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearAnimationBase`1.#ctor(`0,`0,System.Windows.Duration)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearAnimationBase`1"/> class that animates from the specified starting value to the specified destination value over the specified duration.</summary>
            <param name="toValue">The destination value of the animation.</param>
            <param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
            <param name="fromValue">The starting value of the animation.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearAnimationBase`1.#ctor(`0,`0,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearAnimationBase`1"/> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior.</summary>
            <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
            <param name="toValue">The destination value of the animation. </param>
            <param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
            <param name="fromValue">The starting value of the animation.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearAnimationBase`1.Clone">
            <summary>Creates a modifiable clone of this <see cref="T:Avalon.Windows.Media.Animation.LinearAnimationBase`1"/>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
            <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"/> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"/> property was true.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearAnimationBase`1.CreateInstanceCore">
            <summary>
            When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable"/> derived class.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearAnimationBase`1.GetCurrentValueCore(`0,`0,System.Windows.Media.Animation.AnimationClock)">
            <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:LinearAnimationBase{T}" />. </summary>
            <returns>The calculated value of the property, as determined by the current animation.</returns>
            <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
            <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
            <param name="animationClock">An <see cref="T:AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.LinearAnimationBase`1.By">
            <summary>Gets or sets the total amount by which the animation changes its starting value.</summary>
            <returns>The total amount by which the animation changes its starting value. The default value is null.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.LinearAnimationBase`1.From">
            <summary>Gets or sets the animation's starting value.</summary>
            <returns>The starting value of the animation. The default value is null.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.LinearAnimationBase`1.To">
            <summary> Gets or sets the animation's ending value.</summary>
            <returns>The ending value of the animation. The default value is null.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimation.#ctor">
            <summary> Initializes a new instance of the CornerRadiusAnimation class.</summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimation.#ctor(System.Windows.CornerRadius,System.Windows.Duration)">
            <summary>Initializes a new instance of the CornerRadiusAnimation class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
            <param name="toValue">The destination value of the animation. </param>
            <param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimation.#ctor(System.Windows.CornerRadius,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
            <summary>Initializes a new instance of the CornerRadiusAnimation class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
            <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
            <param name="toValue">The destination value of the animation. </param>
            <param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimation.#ctor(System.Windows.CornerRadius,System.Windows.CornerRadius,System.Windows.Duration)">
            <summary>Initializes a new instance of the CornerRadiusAnimation class that animates from the specified starting value to the specified destination value over the specified duration.</summary>
            <param name="toValue">The destination value of the animation.</param>
            <param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
            <param name="fromValue">The starting value of the animation.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimation.#ctor(System.Windows.CornerRadius,System.Windows.CornerRadius,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
            <summary>Initializes a new instance of the CornerRadiusAnimation class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior.</summary>
            <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
            <param name="toValue">The destination value of the animation. </param>
            <param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
            <param name="fromValue">The starting value of the animation.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimation.CreateInstanceCore">
            <summary>Creates a new instance of the <see cref="T:Avalon.Windows.Media.Animation.CornerRadiusAnimation"/>.</summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimation.CreateCalculator">
            <summary>
            Creates the appropriate calculator for the animation type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Avalon.Windows.Controls.TaskDialog">
            <summary>
            Represents a task dialog control.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.#cctor">
            <summary>
            Initializes the <see cref="T:Avalon.Windows.Controls.TaskDialog"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Controls.TaskDialog"/> class.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.AllowDialogCancellationProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.AllowDialogCancellation"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ShowVerificationProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ShowVerification"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.IsVerificationCheckedProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.IsVerificationChecked"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.VerificationProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.Verification"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.VerificationTemplateProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.VerificationTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.VerificationTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.VerificationTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.OwnerProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.Owner"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.SelectedItem"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ShowProgressBarProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ShowProgressBar"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.IsProgressIndeterminateProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.IsProgressIndeterminate"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.TitleProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.Title"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ShowFooterProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ShowFooter"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.FooterProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.Footer"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.FooterTemplateProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.FooterTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.FooterTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.FooterTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.IsExpandedProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.IsExpanded"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ExpansionPositionProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionPosition"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ExpansionContentProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionContent"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ExpansionContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ExpansionContentTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionContentTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContentProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContent"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContentTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContentTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.MainIconProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.MainIcon"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.FooterIconProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.FooterIcon"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.OnButtonsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Added to support the deprecated <see cref="P:Avalon.Windows.Controls.TaskDialog.StandardButtons"/> property.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ButtonsProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.Buttons"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.RadioButtonsProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.RadioButtons"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.CommandLinksProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.CommandLinks"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ButtonContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ButtonContainerStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ButtonContainerStyleSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ButtonContainerStyleSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.CommandLinkContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.CommandLinkContainerStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.CommandLinkContainerStyleSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.CommandLinkContainerStyleSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.RadioButtonContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.RadioButtonContainerStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.RadioButtonContainerStyleSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.RadioButtonContainerStyleSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ButtonTemplateProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ButtonTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ButtonTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.ButtonTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.CommandLinkTemplateProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.CommandLinkTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.CommandLinkTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.CommandLinkTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.RadioButtonTemplateProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.RadioButtonTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.RadioButtonTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TaskDialog.RadioButtonTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.CopyContentCommand">
            <summary>
            Identifies the <c>CopyContent</c> routed command.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.ExecuteCopyContentCommand(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Executes the <see cref="F:Avalon.Windows.Controls.TaskDialog.CopyContentCommand"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.CancelCommand">
            <summary>
            Identifies the <c>Cancel</c> routed command.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.ExecuteCancelCommand(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Executes the <see cref="F:Avalon.Windows.Controls.TaskDialog.CancelCommand"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialog.ClosedEvent">
            <summary>
            Identifies the <see cref="E:Avalon.Windows.Controls.TaskDialog.Closed"/> routed event.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show">
            <summary>
            Displays the <see cref="T:Avalon.Windows.Controls.TaskDialog"/> in a <see cref="T:System.Windows.Window"/>.
            <remarks>
                The control must not be parented prior to calling this method.
            </remarks>
            </summary>
            <exception cref="T:System.InvalidOperationException">This instance already has a parent.</exception>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.String)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.String,System.String)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.Windows.DependencyObject,System.String)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="owner">The owner.</param>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.String,System.String,Avalon.Windows.Controls.TaskDialogButtons)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name="standardButtons">The standard buttons.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.Windows.DependencyObject,System.String,System.String)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="owner">The owner.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.String,System.String,System.String)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.String,System.String,System.String,Avalon.Windows.Controls.TaskDialogButtons)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name="standardButtons">The standard buttons.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.Windows.DependencyObject,System.String,System.String,System.String)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="owner">The owner.</param>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.String,System.String,System.String,Avalon.Windows.Controls.TaskDialogButtons,Avalon.Windows.Controls.TaskDialogIcon)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name="standardButtons">The standard buttons.</param>
            <param name="icon">The icon.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.Windows.DependencyObject,System.String,System.String,System.String,Avalon.Windows.Controls.TaskDialogButtons)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="owner">The owner.</param>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name="standardButtons">The standard buttons.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.Windows.DependencyObject,System.String,System.String,System.String,Avalon.Windows.Controls.TaskDialogButtons,Avalon.Windows.Controls.TaskDialogIcon)">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="owner">The owner.</param>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name="standardButtons">The standard buttons.</param>
            <param name="icon">The icon.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.String,System.String,System.String,Avalon.Windows.Controls.TaskDialogButtons,Avalon.Windows.Controls.TaskDialogIcon,System.Boolean,Avalon.Windows.Controls.TaskDialogButtonData[])">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name="standardButtons">The standard buttons.</param>
            <param name="icon">The icon.</param>
            <param name="useCommandLinks">if set to <c>true</c>, use <see cref="T:Avalon.Windows.Controls.CommandLink"/>s instead of <see cref="T:System.Windows.Controls.Button"/>s.</param>
            <param name="buttons">The buttons.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.Show(System.Windows.DependencyObject,System.String,System.String,System.String,Avalon.Windows.Controls.TaskDialogButtons,Avalon.Windows.Controls.TaskDialogIcon,System.Boolean,Avalon.Windows.Controls.TaskDialogButtonData[])">
            <summary>
            Displays a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
            <param name="owner">The owner.</param>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name="standardButtons">The standard buttons.</param>
            <param name="icon">The icon.</param>
            <param name="useCommandLinks">if set to <c>true</c>, use <see cref="T:Avalon.Windows.Controls.CommandLink"/>s instead of <see cref="T:System.Windows.Controls.Button"/>s.</param>
            <param name="buttons">The buttons.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.OnApplyTemplate">
            <summary>
            Hooks up template parts.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.FocusDefaultButton">
            <summary>
            Attempts to set focus to the default button.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.FindDefaultButton(System.Collections.Generic.IList{System.Object},System.Windows.Controls.ItemsControl)">
            <summary>
            Finds the default button in the list of objects.
            </summary>
            <param name="items">The items.</param>
            <param name="itemsControl">The items control.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.CopyContent">
            <summary>
            Copies the value of <see cref="P:Avalon.Windows.Controls.TaskDialog.ContentText"/> to the clipboard.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.GetBooleanString(System.Nullable{System.Boolean})">
            <summary>
            Formats a nullable boolean value as a character. Used by <see cref="P:Avalon.Windows.Controls.TaskDialog.ContentText"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.AppendContent(System.Object,System.String,System.Text.StringBuilder)">
            <summary>
            Appends the given content and adds a title. Used by <see cref="P:Avalon.Windows.Controls.TaskDialog.ContentText"/>.
            </summary>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name="sb">The sb.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialog.GetContentText(System.Object)">
            <summary>
            Gets a textual representation of the specified content object. Used by <see cref="P:Avalon.Windows.Controls.TaskDialog.ContentText"/>.
            <remarks>
            If the content is a <see cref="T:System.Windows.Media.Visual"/>, its visual tree is walked and all text from <see cref="T:System.Windows.Controls.TextBlock"/>s
            and <see cref="T:System.Windows.Documents.FlowDocument"/>s is retrieved. Otherwise, the <see cref="M:System.Object.ToString"/> method is called.
            </remarks>
            </summary>
            <param name="content">The content.</param>
            <returns>A textual representation of the specified content object.</returns>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.AllowDialogCancellation">
            <summary>
            Gets or sets a value indicating whether cancellation of the dialog is allowed.
            </summary>
            <value>
            	<c>true</c> if cancellation of the dialog is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ShowVerification">
            <summary>
            Gets or sets a value indicating whether to display the verification checkbox.
            </summary>
            <value><c>true</c> if the verification checkbox is displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.IsVerificationChecked">
            <summary>
            Gets or sets a value indicating whether the verification checkbox is checked.
            </summary>
            <value><c>true</c> if the verification is checked; <c>false</c> if the verification is unchecked; otherwise null.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.Verification">
            <summary>
            Gets or sets the verification content.
            </summary>
            <value>The verification content.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.VerificationTemplate">
            <summary>
            Gets or sets the data template used to display the <see cref="P:Avalon.Windows.Controls.TaskDialog.Verification"/> content.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.VerificationTemplateSelector">
            <summary>
            Gets or sets a template selector that enables an application writer to provide custom template-selection logic.
            </summary>
            <value>The template selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.Owner">
            <summary>
            Gets or sets the owner.
            <remarks>
                The owner helps determine the owner window the dialog will belong to.
            </remarks>
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.SelectedItem">
            <summary>
            Gets the selected item.
            <remarks>
                The selected item will be either a button or a command link.
                The item type is either a <see cref="T:Avalon.Windows.Controls.TaskDialogIcon"/>,
                an item from the <see cref="P:Avalon.Windows.Controls.TaskDialog.Buttons"/> collection or
                an item from the <see cref="P:Avalon.Windows.Controls.TaskDialog.CommandLinks"/> collection, respectively.
            </remarks>
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ShowProgressBar">
            <summary>
            Gets or sets a value indicating whether to display the progress bar.
            </summary>
            <value><c>true</c> if the progress bar is displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.IsProgressIndeterminate">
            <summary>
            Gets or sets a value indicating whether the progress bar is indeterminate.
            </summary>
            <value>
            	<c>true</c> if this the progress bar is indeterminate; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.Title">
            <summary>
            Gets or sets the window title.
            </summary>
            <value>The window title.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ShowFooter">
            <summary>
            Gets or sets a value indicating whether the is footer visible.
            </summary>
            <value>
            	<c>true</c> if the is footer visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.Footer">
            <summary>
            Gets or sets the footer content.
            </summary>
            <value>The footer content.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.FooterTemplate">
            <summary>
            Gets or sets the data template used to display the <see cref="P:Avalon.Windows.Controls.TaskDialog.Footer"/> content.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.FooterTemplateSelector">
            <summary>
            Gets or sets a template selector that enables an application writer to provide custom template-selection logic.
            </summary>
            <value>The template selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the expansion content is expanded.
            </summary>
            <value>
            	<c>true</c> if expansion content is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ExpansionPosition">
            <summary>
            Gets or sets the expansion position.
            </summary>
            <value>The expansion position.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ExpansionContent">
            <summary>
            Gets or sets the expansion content.
            </summary>
            <value>The expansion content.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ExpansionContentTemplate">
            <summary>
            Gets or sets the data template used to display the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionContent"/>.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ExpansionContentTemplateSelector">
            <summary>
            Gets or sets a template selector that enables an application writer to provide custom template-selection logic.
            </summary>
            <value>The template selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContent">
            <summary>
            Gets or sets the content of the expansion button.
            </summary>
            <value>The content of the expansion button.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContentTemplate">
            <summary>
            Gets or sets the data template used to display the <see cref="P:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContent"/>.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ExpansionButtonContentTemplateSelector">
            <summary>
            Gets or sets a template selector that enables an application writer to provide custom template-selection logic.
            </summary>
            <value>The template selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.MainIcon">
            <summary>
            Gets or sets the main icon.
            </summary>
            <value>The main icon.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.FooterIcon">
            <summary>
            Gets or sets the footer icon.
            </summary>
            <value>The footer icon.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.StandardButtons">
            <summary>
            Gets or sets the standard buttons.
            </summary>
            <value>The standard buttons.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.Buttons">
            <summary>
            Gets the button collection.
            </summary>
            <value>The button collection.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.RadioButtons">
            <summary>
            Gets or sets the radio button collection.
            </summary>
            <value>The radio button collection.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.CommandLinks">
            <summary>
            Gets or sets the command link collection.
            </summary>
            <value>The command link collection.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ButtonContainerStyle">
            <summary>
            Gets or sets the button container style.
            </summary>
            <value>The button container style.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ButtonContainerStyleSelector">
            <summary>
            Gets or sets the button container style selector.
            </summary>
            <value>The button container style selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.CommandLinkContainerStyle">
            <summary>
            Gets or sets the command link container style.
            </summary>
            <value>The command link container style.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.CommandLinkContainerStyleSelector">
            <summary>
            Gets or sets the command link container style selector.
            </summary>
            <value>The command link container style selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.RadioButtonContainerStyle">
            <summary>
            Gets or sets the radio button container style.
            </summary>
            <value>The radio button container style.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.RadioButtonContainerStyleSelector">
            <summary>
            Gets or sets the radio button container style selector.
            </summary>
            <value>The radio button container style selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ButtonTemplate">
            <summary>
            Gets or sets the button template.
            </summary>
            <value>The button template.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ButtonTemplateSelector">
            <summary>
            Gets or sets the button template selector.
            </summary>
            <value>The button template selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.CommandLinkTemplate">
            <summary>
            Gets or sets the command link template.
            </summary>
            <value>The command link template.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.CommandLinkTemplateSelector">
            <summary>
            Gets or sets the command link template selector.
            </summary>
            <value>The command link template selector.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.RadioButtonTemplate">
            <summary>
            Gets or sets the radio button template.
            </summary>
            <value>The radio button template.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.RadioButtonTemplateSelector">
            <summary>
            Gets or sets the radio button template selector.
            </summary>
            <value>The radio button template selector.</value>
        </member>
        <member name="E:Avalon.Windows.Controls.TaskDialog.Closed">
            <summary>
            Occurs when the dialog is closed.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.Result">
            <summary>
            Gets the <see cref="T:Avalon.Windows.Controls.TaskDialogResult"/>.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialog.ContentText">
            <summary>
            Gets the text of the entire content of the dialog.
            <remarks>
            This can be copied to the clipboard using Ctrl-C or the <see cref="F:Avalon.Windows.Controls.TaskDialog.CopyContentCommand"/>.
            </remarks>
            </summary>
            <value>The content text.</value>
        </member>
        <member name="T:Avalon.Windows.Utility.AnimationHelpers">
            <summary>
            Encapsulates methods and properties for handling animations.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.ReverseStoryboard(System.Windows.Media.Animation.Storyboard)">
            <summary>
            Switches between the To and From properties of the each AnimationTimeline in the Storyboard.
            </summary>
            <param name="storyboard">The storyboard.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.GetReversedStoryboard(System.Windows.Media.Animation.Storyboard)">
            <summary>
            Returns a cloned Storyboard where the To and From properties of the AnimationTimeline have been switched.
            </summary>
            <param name="storyboard">The storyboard.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.AddLinearAnimation``2(System.Windows.Media.Animation.Storyboard,System.Windows.PropertyPath,System.Nullable{``1},System.Nullable{``1},System.Windows.Duration)">
            <summary>
            Creates and adds an AnimationTimeline to a Storyboard.
            </summary>
            <typeparam name="TAnimation">The type of the animation.</typeparam>
            <typeparam name="T"></typeparam>
            <param name="storyboard">The storyboard.</param>
            <param name="path">The path.</param>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="duration">The duration.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.AddAnimation(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.Timeline,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Adds the animation to the storyboard.
            </summary>
            <param name="storyboard">The storyboard.</param>
            <param name="timeline">The timeline.</param>
            <param name="target">The target.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.AddAnimation(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.Timeline,System.String,System.Windows.DependencyProperty)">
            <summary>
            Adds the animation to the storyboard.
            </summary>
            <param name="storyboard">The storyboard.</param>
            <param name="timeline">The timeline.</param>
            <param name="targetName">Name of the target.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.GetWidthPercentage(System.Windows.FrameworkElement)">
            <summary>
            Gets the width percentage.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.SetWidthPercentage(System.Windows.FrameworkElement,System.Int32)">
            <summary>
            Sets the width percentage.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:Avalon.Windows.Utility.AnimationHelpers.WidthPercentageProperty">
            <summary>
            Identifies the <c>WidthPercentage</c> attached property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.GetHeightPercentage(System.Windows.FrameworkElement)">
            <summary>
            Gets the height percentage.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.AnimationHelpers.SetHeightPercentage(System.Windows.FrameworkElement,System.Int32)">
            <summary>
            Sets the height percentage.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:Avalon.Windows.Utility.AnimationHelpers.HeightPercentageProperty">
            <summary>
            Identifies the <c>HeightPercentage</c> attached property.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.KeyFrame`1">
            <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:KeyFramesAnimationBase{T}" />. </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Avalon.Windows.Media.Animation.KeyFrame`1.KeyTimeProperty">
            <summary>Identifies the <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.KeyTime"/> dependency property.</summary>
            <returns>The identifier for the <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.KeyTime"/> dependency property.</returns>
        </member>
        <member name="F:Avalon.Windows.Media.Animation.KeyFrame`1.ValueProperty">
            <summary>Identifies the <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/> dependency property.</summary>
            <returns>The identifier for the <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/> dependency property.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrame`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> class that has the specified target <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/>.  </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrame`1.#ctor(`0)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> class that has the specified target <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/>.  </summary>
            <param name="value">The <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/> of the new <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> instance.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrame`1.#ctor(`0,System.Windows.Media.Animation.KeyTime)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> class that has the specified target <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/> and <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.KeyTime"/>.  </summary>
            <param name="value">The <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/> of the new <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> instance.</param>
            <param name="keyTime">The <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.KeyTime"/> of the new <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> instance.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrame`1.InterpolateValue(`0,System.Double)">
            <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
            <returns>The output value of this key frame given the specified base value and progress.</returns>
            <param name="baseValue">The value to animate from.</param>
            <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Occurs if keyFrameProgress is not between 0.0 and 1.0, inclusive.</exception>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFrame`1.InterpolateValueCore(`0,System.Double)">
            <summary>Calculates the value of a key frame at the progress increment provided. </summary>
            <returns>The output value of this key frame given the specified base value and progress.</returns>
            <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
            <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value">
            <summary>Gets or sets the key frame's target value.</summary>
            <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.KeyTime"/>. The default value is 0.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFrame`1.KeyTime">
            <summary> Gets or sets the time at which the key frame's target <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/> should be reached. </summary>
            <returns>The time at which the key frame's current value should be equal to its <see cref="P:Avalon.Windows.Media.Animation.KeyFrame`1.Value"/> property. The default value is <see cref="F:KeyTime.Uniform"/>.</returns>
        </member>
        <member name="T:Avalon.Windows.Converters.FormattedTextTypeConverter">
            <summary>
            Provides a <see cref="T:System.ComponentModel.TypeConverter"/> that converts a string of formatted text to a <see cref="T:System.Windows.Documents.Inline"/>s.
            </summary>
            <seealso cref="T:Avalon.Windows.Converters.FormattedTextConverter"/>
            <seealso cref="M:Avalon.Windows.Utility.BindingHelpers.GetInlines(System.Windows.DependencyObject)"/>
            <seealso cref="M:Avalon.Windows.Utility.BindingHelpers.SetInlines(System.Windows.DependencyObject,System.Collections.Generic.IEnumerable{System.Windows.Documents.Inline})"/>
        </member>
        <member name="M:Avalon.Windows.Converters.FormattedTextTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Avalon.Windows.Converters.FormattedTextTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Avalon.Windows.Converters.FormattedTextTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Converters.FormattedTextTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="T:Avalon.Windows.Controls.TaskDialogIconConverter">
            <summary>
            Converts between <see cref="T:Avalon.Windows.Controls.TaskDialogIcon"/> and an <see cref="T:System.Windows.Media.ImageSource"/>.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogIconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the converter can convert an object of the given type to an instance of <see cref="T:System.Windows.Media.ImageSource"/>.
            </summary>
            <param name="context">Type context information used to evaluate conversion.</param>
            <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
            <returns>
            true if the converter can convert the provided type to an instance of <see cref="T:System.Windows.Media.ImageSource"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogIconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Attempts to convert a specified object to an instance of <see cref="T:System.Windows.Media.ImageSource"/>.
            </summary>
            <param name="context">Type context information used for conversion.</param>
            <param name="culture">Cultural information that is respected during conversion.</param>
            <param name="value">The object being converted.</param>
            <returns>
            A new instance of <see cref="T:System.Windows.Media.ImageSource"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            	<paramref name="value"/> is null or is an invalid type.</exception>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogIconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether an instance of <see cref="T:System.Windows.Media.ImageSource"/> can be converted to a different type.
            </summary>
            <param name="context">Type context information used to evaluate conversion.</param>
            <param name="destinationType">The desired type to evaluate the conversion to.</param>
            <returns>
            true if the converter can convert this instance of <see cref="T:System.Windows.Media.ImageSource"/>; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="context"/> instance is not an <see cref="T:System.Windows.Media.ImageSource"/>.</exception>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogIconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Attempts to convert an instance of <see cref="T:System.Windows.Media.ImageSource"/> to a specified type.
            </summary>
            <param name="context">Context information used for conversion.</param>
            <param name="culture">Cultural information that is respected during conversion.</param>
            <param name="value"><see cref="T:System.Windows.Media.ImageSource"/> to convert.</param>
            <param name="destinationType">Type being evaluated for conversion.</param>
            <returns>
            A new instance of the <paramref name="destinationType"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            	<paramref name="value"/> is null or is not a valid type.-or-<paramref name="context"/> instance cannot serialize to a string.</exception>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogIconConverter.ConvertFrom(Avalon.Windows.Controls.TaskDialogIcon)">
            <summary>
            Converts a <see cref="T:Avalon.Windows.Controls.TaskDialogIcon"/> to an <see cref="T:System.Windows.Media.ImageSource"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogIconConverter.ConvertFrom(System.String)">
            <summary>
            Converts a <see cref="T:Avalon.Windows.Controls.TaskDialogIcon"/> to an <see cref="T:System.Windows.Media.ImageSource"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogIconConverter.ConvertTo(System.Windows.Media.ImageSource)">
            <summary>
            Converts an <see cref="T:System.Windows.Media.ImageSource"/> to a <see cref="T:Avalon.Windows.Controls.TaskDialogIcon"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Avalon.Windows.Controls.NineGridBorder">
            <summary>
            Draws a border around another element using nine grid images.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NineGridBorder.ImageProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.NineGridBorder.Image"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NineGridBorder.ImageMarginProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.NineGridBorder.ImageMargin"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NineGridBorder.ImageOpacityProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.NineGridBorder.ImageOpacity"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.NineGridBorder.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the nine grid image border.
            </summary>
            <param name="dc"></param>
        </member>
        <member name="P:Avalon.Windows.Controls.NineGridBorder.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.NineGridBorder.ImageMargin">
            <summary>
            Gets or sets the image margin.
            </summary>
            <value>The image margin.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.NineGridBorder.ImageOpacity">
            <summary>
            Gets or sets the image opacity.
            </summary>
            <value>The image opacity.</value>
        </member>
        <member name="T:Avalon.Windows.Controls.Bitmap">
            <summary>
            Provides a bitmap image control that prevents blurriness.
            <remarks>
            Source from http://blogs.msdn.com/dwayneneed/archive/2007/10/05/blurry-bitmaps.aspx.
            </remarks>
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.Bitmap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Controls.Bitmap"/> class.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.Bitmap.SourceProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.Bitmap.Source"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.Bitmap.MeasureCore(System.Windows.Size)">
            <summary>
            Return our measure size to be the size needed to display the bitmap pixels.
            </summary>
            <param name="availableSize">The available size that the parent element can allocate for the child.</param>
            <returns>
            The desired size of this element in layout.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Controls.Bitmap.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Renders the bitmap.
            </summary>
            <param name="drawingContext">The drawing context.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.Bitmap.GetVisualTransform(System.Windows.Media.Visual)">
            <summary>
            Gets the matrix that will convert a point from "above" the
            coordinate space of a visual into the the coordinate space
            "below" the visual.
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="P:Avalon.Windows.Controls.Bitmap.Source">
            <summary>
            Gets or sets the bitmap source.
            </summary>
            <value>The bitmap source.</value>
        </member>
        <member name="E:Avalon.Windows.Controls.Bitmap.BitmapFailed">
            <summary>
            Occurs when loading the bitmap has failed.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Converters.EnumResourceTypeConverter`1">
            <summary>
            Provides a <see cref="T:System.ComponentModel.TypeConverter"/> that converts enum values to and from resource strings.
            </summary>
            <typeparam name="TResourceManager">The type of the static class that contains a reference to a <see cref="T:System.Resources.ResourceManager"/>.</typeparam>
        </member>
        <member name="M:Avalon.Windows.Converters.EnumResourceTypeConverter`1.#cctor">
            <summary>
            Initializes the <see cref="T:Avalon.Windows.Converters.EnumResourceTypeConverter`1"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Converters.EnumResourceTypeConverter`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Converters.EnumResourceTypeConverter`1"/> class.
            </summary>
            <param name="type">A <see cref="T:System.Type"/> that represents the type of enumeration to associate with this enumeration converter.</param>
        </member>
        <member name="M:Avalon.Windows.Converters.EnumResourceTypeConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified destination type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">An optional <see cref="T:System.Globalization.CultureInfo"/>. If not supplied, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the value to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null. </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is not a valid value for the enumeration. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Avalon.Windows.Converters.EnumResourceTypeConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified value object to an enumeration object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">An optional <see cref="T:System.Globalization.CultureInfo"/>. If not supplied, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted <paramref name="value"/>.
            </returns>
            <exception cref="T:System.FormatException">
            	<paramref name="value"/> is not a valid value for the target type. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.CornerRadiusAnimationUsingKeyFrames">
            <summary>
            Animates the value of a <see cref="T:System.Windows.CornerRadius"/> property along a set of <see cref="P:KeyFramesAnimationBase{T}.KeyFrames"/>.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1">
            <summary>
            Animates the value of a <typeparamref name="T"/> property along a set of <see cref="P:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.KeyFrames"/>.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.AddChild(System.Object)">
            <summary>Adds a child <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> to this <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>. </summary>
            <param name="child">The object to be added as the child of this <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>. </param>
            <exception cref="T:System.ArgumentException">The parameter child is not a <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/>.</exception>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.AddText(System.String)">
            <summary>Adds a text string as a child of this <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>.</summary>
            <param name="childText">The text added to the <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>.</param>
            <exception cref="T:System.InvalidOperationException">A <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.Clone">
            <summary>Creates a modifiable clone of this <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
            <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"/> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"/> property was true.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.CloneCore(System.Windows.Freezable)">
            <summary>Makes this instance a deep copy of the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
            <param name="sourceFreezable">The <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> to clone.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.CloneCurrentValue">
            <summary>Creates a modifiable clone of this <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
            <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"/> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"/> property was true.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
            <param name="sourceFreezable">The <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> to clone.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.CreateInstanceCore">
            <summary>Creates a new instance of <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>. </summary>
            <returns>A new instance of <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.FreezeCore(System.Boolean)">
            <summary>Makes this instance of <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> object unmodifiable or determines whether it can be made unmodifiable..</summary>
            <returns>If isChecking is true, this method returns true if this <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method returns true if the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having made the actual change in frozen status to this object.</returns>
            <param name="isChecking">true if the <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> instance should actually freeze itself when this method is called. false if the <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> instance should simply return whether it can be frozen.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>Makes this instance a clone of the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> object. </summary>
            <param name="sourceFreezable">The <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> object to clone.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>Makes this instance a frozen clone of the specified <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
            <param name="sourceFreezable">The <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> to copy and freeze.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.GetCurrentValueCore(`0,`0,System.Windows.Media.Animation.AnimationClock)">
            <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/>.</summary>
            <returns>The calculated value of the property, as determined by the current instance.</returns>
            <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
            <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
            <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock"/> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"/> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"/> used by the host animation.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
            <summary>Provide a custom natural <see cref="T:System.Windows.Duration"/> when the <see cref="T:System.Windows.Duration"/> property is set to <see cref="P:System.Windows.Duration.Automatic"/>. </summary>
            <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime"/>, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration"/>; otherwise it will be one second.</returns>
            <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock"/> whose natural duration is desired.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.OnChanged">
            <summary>Called when the current <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> object is modified.</summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.ShouldSerializeKeyFrames">
            <summary>Returns true if the value of the <see cref="P:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.KeyFrames"/> property of this instance of <see cref="T:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1"/> should be value-serialized.</summary>
            <returns>true if the property value should be serialized; otherwise, false.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.KeyFramesAnimationBase`1.KeyFrames">
            <summary> Gets or sets the collection of <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> objects that define the animation. </summary>
            <returns>The collection of <see cref="T:Avalon.Windows.Media.Animation.KeyFrame`1"/> objects that define the animation. The default value is <see cref="P:Avalon.Windows.Media.Animation.KeyFrameCollection`1.Empty"/>.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimationUsingKeyFrames.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.CornerRadiusAnimationUsingKeyFrames"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimationUsingKeyFrames.CreateInstanceCore">
            <summary>
            Creates a new instance of <see cref="T:Avalon.Windows.Media.Animation.CornerRadiusAnimationUsingKeyFrames"/>.
            </summary>
            <returns>
            A new instance of <see cref="T:Avalon.Windows.Media.Animation.CornerRadiusAnimationUsingKeyFrames"/>.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.CornerRadiusAnimationUsingKeyFrames.CreateCalculator">
            <summary>
            Creates the appropriate calculator for the animation type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Avalon.Windows.Controls.TaskDialogButtonData">
            <summary>
            Represents metadata for creating <see cref="T:Avalon.Windows.Controls.TaskDialog"/> buttons or <see cref="T:Avalon.Windows.Controls.CommandLink"/>s.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogButtonData.#ctor(System.Int32,System.Object,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Controls.TaskDialogButtonData"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
            <param name="isDefault">if set to <c>true</c>, the button is defaulted.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogButtonData.#ctor(System.Int32,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Controls.TaskDialogButtonData"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="header">The header.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogButtonData.#ctor(Avalon.Windows.Controls.TaskDialogButtons,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Controls.TaskDialogButtonData"/> class.
            </summary>
            <param name="button">The button.</param>
            <param name="isDefault">if set to <c>true</c>, the button is defaulted.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogButtonData.#ctor(Avalon.Windows.Controls.TaskDialogButtons)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Controls.TaskDialogButtonData"/> class.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogButtonData.ValidateNonStandardButton">
            <summary>
            Ensures that the current instance is a custom button.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogButtonData.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogButtonData.FromStandardButtons(Avalon.Windows.Controls.TaskDialogButtons)">
            <summary>
            Converts a flag-valued <see cref="T:Avalon.Windows.Controls.TaskDialogButtons"/> to <see cref="T:Avalon.Windows.Controls.TaskDialogButtonData"/> objects.
            </summary>
            <param name="buttons">The buttons.</param>
            <returns></returns>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogButtonData.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogButtonData.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogButtonData.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogButtonData.IsDefault">
            <summary>
            Gets or sets a value indicating whether the button is defaulted.
            </summary>
            <value>
            	<c>true</c> if the button is defaulted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogButtonData.Button">
            <summary>
            Gets or sets the button.
            </summary>
            <value>The button.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogButtonData.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used to store custom information about this object.
            </summary>
            <value>The intended value.</value>
        </member>
        <member name="E:Avalon.Windows.Controls.TaskDialogButtonData.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Controls.AnimatedTextMode">
            <summary>
            Specifies the type of the animation in the <see cref="T:Avalon.Windows.Controls.AnimatedTextBlock"/> control.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextMode.None">
            <summary>
            No animation.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextMode.Reveal">
            <summary>
            Reveal the text.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextMode.Hide">
            <summary>
            Hide the text.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextMode.RevealAndHide">
            <summary>
            Reveal the text and then hide it.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextMode.Spotlight">
            <summary>
            Highlight a segment of the text and move on.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Converters.EnumFlagsConverter">
            <summary>
            Converts an enumeration value flags to an array of separate enumeration values.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Converters.ValueConverter">
            <summary>
            Provides a base class for <see cref="T:System.Windows.Data.IValueConverter"/>s and <see cref="T:System.Windows.Data.IMultiValueConverter"/>s.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the <see cref="T:System.Windows.Data.Binding"/> source.</param>
            <param name="targetType">The type of the <see cref="T:System.Windows.Data.Binding"/> target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the <see cref="T:System.Windows.Data.Binding"/> target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.MultiConvert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the <see cref="T:System.Windows.Data.Binding"/> target. The data binding engine calls this method when it propagates the values from source bindings to the <see cref="T:System.Windows.Data.Binding"/> target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the <see cref="T:System.Windows.Data.Binding"/> target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"/>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding"/>.<see cref="F:System.Windows.Data.Binding.DoNothing"/> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> or the default value.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.MultiConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Windows.Data.Binding"/> target value to the source binding values.
            </summary>
            <param name="value">The value that the <see cref="T:System.Windows.Data.Binding"/> target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.Convert(System.Object)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.Convert(System.Object,System.Object)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.ConvertBack(System.Object)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.ConvertBack(System.Object,System.Object)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.MultiConvert(System.Object[])">
            <summary>
            Converts a set of values to a single value.
            </summary>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.MultiConvert(System.Object[],System.Object)">
            <summary>
            Converts a set of values to a single value.
            </summary>
            <param name="values">The values.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.MultiConvertBack(System.Object)">
            <summary>
            Converts a set of values to a single value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.MultiConvertBack(System.Object,System.Object)">
            <summary>
            Converts a set of values to a single value.
            </summary>
            <param name="value">The value.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Converters.ValueConverter.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns this instace.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            This instance.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Converters.EnumFlagsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Avalon.Windows.Controls.TypedItemsControl">
            <summary>
            Represents a control that can be used to present a collection of items,
            wrapped in the specified container type.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TypedItemsControl.ItemContainerTypeProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TypedItemsControl.ItemContainerType"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TypedItemsControl.ValidateItemContainerType(System.Object)">
            <summary>
            Validates the type of the item container.
            </summary>
            <param name="o">The object to validate.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TypedItemsControl.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TypedItemsControl.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            true if the item is (or is eligible to be) its own container; otherwise, false.
            </returns>
        </member>
        <member name="P:Avalon.Windows.Controls.TypedItemsControl.ItemContainerType">
            <summary>
            Gets or sets the type of the item container.
            </summary>
            <value>The type of the item container.</value>
        </member>
        <member name="T:Avalon.Windows.Controls.TaskDialogResult">
            <summary>
            Represents a result received from a <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogResult.Button">
            <summary>
            Gets or sets the selected button.
            </summary>
            <value>The button.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogResult.RadioButton">
            <summary>
            Gets or sets the selected radio button.
            </summary>
            <value>The radio button.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogResult.StandardButton">
            <summary>
            Gets or sets the selected standard button.
            </summary>
            <value>The standard button.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogResult.ButtonData">
            <summary>
            Gets or sets the selected button data.
            </summary>
            <value>The button data.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.TaskDialogResult.IsVerified">
            <summary>
            Gets or sets a value indicating whether the verification was checked.
            </summary>
            <value>
            	<c>true</c> if the verification was checked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Avalon.Windows.Converters.EnumToStringConverter">
            <summary>
            Converts an enum to a string using its <see cref="T:System.ComponentModel.TypeConverter"/>.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Converters.EnumToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            <remarks>
            If the value is an enum, the converter uses the enum's <see cref="T:System.ComponentModel.TypeConverter"/> to retrieve its text value.
            Otherwise, the original value is returned.
            </remarks>
            </summary>
            <param name="value">The value produced by the <see cref="T:System.Windows.Data.Binding"/> source.</param>
            <param name="targetType">The type of the <see cref="T:System.Windows.Data.Binding"/> target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.DoubleAnimationCalculator">
            <summary>
            Provides an implementation of the <see cref="T:Avalon.Windows.Media.Animation.IAnimationCalculator`1"/> interface
            for the <see cref="T:System.Double"/> type.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.IAnimationCalculator`1">
            <summary>
            Provides methods for performing animation-related calculations.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.IAnimationCalculator`1.Add(`0,`0)">
            <summary>
            Adds the specified values.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.IAnimationCalculator`1.Subtract(`0,`0)">
            <summary>
            Subtracts the specified values.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.IAnimationCalculator`1.Scale(`0,System.Double)">
            <summary>
            Scales the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="factor">The factor.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.IAnimationCalculator`1.Interpolate(`0,`0,System.Double)">
            <summary>
            Interpolates the specified value for the given progress.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.IAnimationCalculator`1.GetZeroValue(`0)">
            <summary>
            Gets the zero value for the given base value.
            </summary>
            <param name="baseValue">The base value.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.IAnimationCalculator`1.GetSegmentLength(`0,`0)">
            <summary>
            Gets the length of the segment.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.IAnimationCalculator`1.IsValidAnimationValue(`0)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if specified value is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DoubleAnimationCalculator.Add(System.Double,System.Double)">
            <summary>
            Adds the specified values.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DoubleAnimationCalculator.Subtract(System.Double,System.Double)">
            <summary>
            Subtracts the specified values.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DoubleAnimationCalculator.Scale(System.Double,System.Double)">
            <summary>
            Scales the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="factor">The factor.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DoubleAnimationCalculator.Interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Interpolates the specified value for the given progress.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DoubleAnimationCalculator.GetSegmentLength(System.Double,System.Double)">
            <summary>
            Gets the length of the segment.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DoubleAnimationCalculator.GetZeroValue(System.Double)">
            <summary>
            Gets the zero value for the given base value.
            </summary>
            <param name="baseValue">The base value.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DoubleAnimationCalculator.IsValidAnimationValue(System.Double)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if specified value is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.LinearKeyFrame`1">
            <summary>Animates from the <typeparamref name="T" /> value of the previous key frame to its own <see cref="P:KeyFrame{T}.Value"/> using linear interpolation.</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearKeyFrame`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearKeyFrame`1"/> class with the specified ending value. </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearKeyFrame`1.#ctor(`0)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearKeyFrame`1"/> class with the specified ending value. </summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearKeyFrame`1.#ctor(`0,System.Windows.Media.Animation.KeyTime)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearKeyFrame`1"/> class with the specified ending value and key time.</summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
            <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearKeyFrame`1.CreateInstanceCore">
            <summary>Creates a new instance of <see cref="T:Avalon.Windows.Media.Animation.LinearKeyFrame`1"/>.</summary>
            <returns>A new <see cref="T:Avalon.Windows.Media.Animation.LinearKeyFrame`1"/>.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearKeyFrame`1.InterpolateValueCore(`0,System.Double)">
            <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
            <returns>The output value of this key frame given the specified base value and progress.</returns>
            <param name="baseValue">The value to animate from.</param>
            <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearKeyFrame`1.CreateCalculator">
            <summary>
            Creates the appropriate calculator for the animation type.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.LinearKeyFrame`1.Calculator">
            <summary>
            Gets the <see cref="T:Avalon.Windows.Media.Animation.IAnimationCalculator`1"/>.
            </summary>
            <value>The calculator.</value>
        </member>
        <member name="T:Avalon.Windows.Controls.TaskDialogExpansionPosition">
            <summary>
            Specifies the positions for the <see cref="T:Avalon.Windows.Controls.TaskDialog"/> expansion pane.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogExpansionPosition.None">
            <summary>
            None; the pane will not be displyed.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogExpansionPosition.Header">
            <summary>
            Header position.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogExpansionPosition.Footer">
            <summary>
            Footer position.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Controls.ImageStrip">
            <summary>
            Represents a control that displays a single image from a strip of images.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.ImageStrip.FrameProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.ImageStrip.Frame"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.ImageStrip.FrameSizeProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.ImageStrip.FrameSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.ImageStrip.ImageProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.ImageStrip.Image"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.ImageStrip.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.ImageStrip.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.ImageStrip.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the current frame from the image strip.
            </summary>
            <param name="drawingContext"></param>
        </member>
        <member name="P:Avalon.Windows.Controls.ImageStrip.Frame">
            <summary>
            Gets or sets the current frame.
            </summary>
            <value>The frame.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.ImageStrip.FrameSize">
            <summary>
            Gets or sets the size of the frame.
            <remarks>If the <see cref="P:Avalon.Windows.Controls.ImageStrip.Orientation"/> is set to <see cref="F:Orientation.Horizontal"/>, this represents the height of the frame; otherwise, the width.</remarks>
            </summary>
            <value>The size of the frame.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.ImageStrip.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.ImageStrip.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.BROWSEINFO.HwndOwner">
            <summary>
            Handle to the owner window for the dialog box.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.BROWSEINFO.Root">
            <summary>
            Pointer to an item identifier list (PIDL) specifying the 
            location of the root folder from which to start browsing.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.BROWSEINFO.DisplayName">
            <summary>
            Address of a buffer to receive the display name of the
            folder selected by the user.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.BROWSEINFO.Title">
            <summary>
            Address of a null-terminated string that is displayed 
            above the tree view control in the dialog box.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.BROWSEINFO.Flags">
            <summary>
            Flags specifying the options for the dialog box.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.BROWSEINFO.Callback">
            <summary>
            Address of an application-defined function that the
            dialog box calls when an event occurs.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.BROWSEINFO.LParam">
            <summary>
            Application-defined value that the dialog box passes to 
            the callback function
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.BROWSEINFO.Image">
            <summary>
            Variable to receive the image associated with the selected folder.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.FolderOnly">
            <summary>
            For finding a folder to start document searching
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.FindComputer">
            <summary>
            For starting the Find Computer
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.ShowStatusText">
            <summary>
            Top of the dialog has 2 lines of text for BROWSEINFO.lpszTitle and 
            one line if this flag is set.  Passing the message 
            BFFM_SETSTATUSTEXTA to the hwnd can set the rest of the text.  
            This is not used with BIF_USENEWUI and BROWSEINFO.lpszTitle gets
            all three lines of text.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.ShowEditBox">
            <summary>
            Add an editbox to the dialog
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.ValidateResult">
            <summary>
            insist on valid result (or CANCEL)
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.UseNewStyle">
            <summary>
            Use the new dialog layout with the ability to resize
            Caller needs to call OleInitialize() before using this API
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.AllowUrls">
            <summary>
            Allow URLs to be displayed or entered. (Requires BIF_USENEWUI)
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.ShowUsageHint">
            <summary>
            Add a UA hint to the dialog, in place of the edit box. May not be
            combined with BIF_EDITBOX.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.HideNewFolderButton">
            <summary>
            Do not add the "New Folder" button to the dialog.  Only applicable 
            with BIF_NEWDIALOGSTYLE.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.GetShortcuts">
            <summary>
            don't traverse target as shortcut
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.BrowseComputers">
            <summary>
            Browsing for Computers.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.BrowsePrinters">
            <summary>
            Browsing for Printers.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.BrowseFiles">
            <summary>
            Browsing for Everything
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.FolderBrowserOptions.BrowseShares">
            <summary>
            sharable resources displayed (remote shares, requires BIF_USENEWUI)
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.NotifyIconFlags.Icon">
            <summary>
            The hIcon member is valid.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.NotifyIconFlags.Message">
            <summary>
            The uCallbackMessage member is valid.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.NotifyIconFlags.ToolTip">
            <summary>
            The szTip member is valid.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.NotifyIconFlags.State">
            <summary>
            The dwState and dwStateMask members are valid.
            </summary>
        </member>
        <member name="F:Avalon.Internal.Win32.NativeMethods.NotifyIconFlags.Balloon">
            <summary>
            Use a balloon ToolTip instead of a standard ToolTip. The szInfo, uTimeout, szInfoTitle, and dwInfoFlags members are valid.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Utility.BindingHelpers">
            <summary>
            Encapsulates methods relating to WPF bindings.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.#cctor">
            <summary>
            Initializes the <see cref="T:Avalon.Windows.Utility.BindingHelpers"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.UpdateSourceDefaultProperty(System.Windows.DependencyObject)">
            <summary>
            Updates the source according to the default property.
            </summary>
            <param name="o">The source.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.UpdateSourceProperty(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Updates the source according to the specified property.
            </summary>
            <param name="o">The source.</param>
            <param name="prop">The property.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.UpdateTarget(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Updates the target of the specified bound property.
            </summary>
            <param name="o">The o.</param>
            <param name="prop">The prop.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.HasError(System.Windows.DependencyObject)">
            <summary>
            Determines whether the specified <see cref="T:System.Windows.DependencyObject"/> has an error.
            </summary>
            <param name="o">The source.</param>
            <returns>
            	<c>true</c> if the specified o has error; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.HasError(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Determines whether the specified <see cref="T:System.Windows.DependencyObject"/> has an error
            for the specified <see cref="T:System.Windows.DependencyProperty"/>.
            </summary>
            <param name="o">The source.</param>
            <param name="p">The property.</param>
            <returns>
            	<c>true</c> if the specified o has error; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.GetErrors(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Gets the all the data validation errors under a given root element.
            </summary>
            <param name="root">The root.</param>
            <param name="markInvalid">If set to <c>true</c> ensures the error template appears.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.GetDefaultDependencyProperty(System.Type)">
            <summary>
            Gets the default <see cref="T:System.Windows.DependencyProperty"/>.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.GetDefaultPropertyName(System.Type)">
            <summary>
            Gets the default property name.
            </summary>
            <param name="type">The type.</param>
            <returns>
                The property name if it exists; otherwise <c>null</c>.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.Eval``1(System.Object,System.String)">
            <summary>
            Evaluates the property path for the specified object and returns its value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.Eval``1(System.Windows.Data.BindingBase)">
            <summary>
            Evaluates the binding returns a value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="binding">The binding.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.GetPassword(System.Windows.DependencyObject)">
            <summary>
            Gets the password.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.SetPassword(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the password.
            <remarks>
            Using this workaround compromises the security implemented in <see cref="T:System.Windows.Controls.PasswordBox"/>.
            </remarks>
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Avalon.Windows.Utility.BindingHelpers.PasswordProperty">
            <summary>
            Identifies the <c>Password</c> attached dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.GetInlines(System.Windows.DependencyObject)">
            <summary>
            Gets the inlines.
            <remarks>
            Important: if the inlines in the TextBlock are changed after this property is set,
            the get will not reflect these changes.
            </remarks>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.BindingHelpers.SetInlines(System.Windows.DependencyObject,System.Collections.Generic.IEnumerable{System.Windows.Documents.Inline})">
            <summary>
            Sets the inlines.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Avalon.Windows.Utility.BindingHelpers.InlinesProperty">
            <summary>
            Identifies the <c>Inlines</c> attached dependency property.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Utility.BindingHelpers.EvalHelper">
            <summary>
            Used internally in the Eval method.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Controls.CommandLink">
            <summary>
            Represents a command link button.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.CommandLink.IsIconVisibleProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.CommandLink.IsIconVisible"/> dependency property.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.CommandLink.IsIconVisible">
            <summary>
            Gets or sets a value indicating whether the icon is visible.
            </summary>
            <value>
            	<c>true</c> if the icon is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Avalon.Windows.Controls.AnimatedTextOrder">
            <summary>
            Specifies the order of the animation in the <see cref="T:Avalon.Windows.Controls.AnimatedTextBlock"/> control.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextOrder.Forward">
            <summary>
            Forward
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextOrder.Backward">
            <summary>
            Backward
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextOrder.Random">
            <summary>
            Random
            </summary>
        </member>
        <member name="T:Avalon.Windows.Controls.TypedListBox">
            <summary>
            Contains a list of selectable items, wrapped in the specified container type.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TypedListBox.ItemContainerTypeProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.TypedListBox.ItemContainerType"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TypedListBox.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Controls.TypedListBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            true if the item is (or is eligible to be) its own container; otherwise, false.
            </returns>
        </member>
        <member name="P:Avalon.Windows.Controls.TypedListBox.ItemContainerType">
            <summary>
            Gets or sets the type of the item container.
            </summary>
            <value>The type of the item container.</value>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.SplineKeyFrame`1">
            <summary>Animates from the <typeparamref name="T"/> value of the previous key frame to its own <see cref="F:KeyFrame{T}.Value" /> using splined interpolation.</summary>
        </member>
        <member name="F:Avalon.Windows.Media.Animation.SplineKeyFrame`1.KeySplineProperty">
            <summary>Identifies the <see cref="F:KeyFrame{T}.KeySpline"/> dependency property.</summary>
            <returns>The identifier for the <see cref="P:Avalon.Windows.Media.Animation.SplineKeyFrame`1.KeySpline"/> dependency property.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineKeyFrame`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.SplineKeyFrame`1"/> class with the specified ending value.  </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineKeyFrame`1.#ctor(`0)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.SplineKeyFrame`1"/> class with the specified ending value.  </summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineKeyFrame`1.#ctor(`0,System.Windows.Media.Animation.KeyTime)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.SplineKeyFrame`1"/> class with the specified ending value and key time. </summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
            <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineKeyFrame`1.#ctor(`0,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.SplineKeyFrame`1"/> class with the specified ending value, key time, and <see cref="P:Avalon.Windows.Media.Animation.SplineKeyFrame`1.KeySpline"/>. </summary>
            <param name="keySpline"><see cref="P:Avalon.Windows.Media.Animation.SplineKeyFrame`1.KeySpline"/> for the key frame. The <see cref="P:Avalon.Windows.Media.Animation.SplineKeyFrame`1.KeySpline"/> represents a Bezier curve which defines animation progress of the key frame.</param>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
            <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineKeyFrame`1.CreateInstanceCore">
            <summary>Creates a new instance of <see cref="T:Avalon.Windows.Media.Animation.SplineKeyFrame`1"/>.</summary>
            <returns>A new <see cref="T:Avalon.Windows.Media.Animation.SplineKeyFrame`1"/>.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineKeyFrame`1.InterpolateValueCore(`0,System.Double)">
            <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
            <returns>The output value of this key frame given the specified base value and progress.</returns>
            <param name="baseValue">The value to animate from.</param>
            <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineKeyFrame`1.CreateCalculator">
            <summary>
            Creates the appropriate calculator for the animation type.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.SplineKeyFrame`1.KeySpline">
            <summary>Gets or sets the two control points that define animation progress for this key frame.   </summary>
            <returns>The two control points that specify the cubic  Bezier curve which defines the progress of the key frame.</returns>
        </member>
        <member name="P:Avalon.Windows.Media.Animation.SplineKeyFrame`1.Calculator">
            <summary>
            Gets the <see cref="T:Avalon.Windows.Media.Animation.IAnimationCalculator`1"/>.
            </summary>
            <value>The calculator.</value>
        </member>
        <member name="T:Avalon.Windows.Controls.TaskDialogIcon">
            <summary>
            Specifies an icon for <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogIcon.None">
            <summary>
            No icon.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogIcon.Warning">
            <summary>
            Warning icon.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogIcon.Error">
            <summary>
            Error icon.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogIcon.Information">
            <summary>
            Information icon.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogIcon.Question">
            <summary>
            Question icon.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogIcon.Shield">
            <summary>
            Shield icon.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Media.Effects.BlurBitmapEffectExtension">
            <summary>
            Attempts to create a <see cref="T:System.Windows.Media.Effects.BlurBitmapEffect"/>.
            <remarks>
            Catches the security exception that's thrown in partial trust.
            </remarks>
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Effects.BlurBitmapEffectExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Effects.BlurBitmapEffectExtension"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Effects.BlurBitmapEffectExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Creates the <see cref="T:System.Windows.Media.Effects.BlurBitmapEffect"/>.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.BlurBitmapEffectExtension.KernelType">
            <summary>
            Gets or sets the type of blur kernel to use.
            </summary>
            <value>
            The type of blur kernel. The default value is <see cref="F:System.Windows.Media.Effects.KernelType.Gaussian"/>.
            </value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.BlurBitmapEffectExtension.Radius">
            <summary>
            Gets or sets the radius used in the blur kernel. A larger radius implies more blurring. 
            </summary>
            <value>
            The radius used in the blur kernel, in DIU (1/96 of an inch). The default value is 5.
            </value>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1">
            <summary>Animates from the <typeparamref name="T"/> value of the previous key frame to its own <see cref="P:KeyFrame{T}.Value" /> using discrete interpolation.</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1"/> class with the specified ending value. </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1.#ctor(`0)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1"/> class with the specified ending value. </summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1.#ctor(`0,System.Windows.Media.Animation.KeyTime)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1"/> class with the specified ending value and key time.</summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
            <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1.CreateInstanceCore">
            <summary>Creates a new instance of <see cref="T:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1"/>.</summary>
            <returns>A new <see cref="T:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1"/>.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteKeyFrame`1.InterpolateValueCore(`0,System.Double)">
            <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
            <returns>The output value of this key frame given the specified base value and progress.</returns>
            <param name="baseValue">The value to animate from.</param>
            <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame">
            <summary>
            Animates from the <see cref="T:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame"/> value of the previous key frame to its own <see cref="P:KeyFrame{T}.Value"/> using linear interpolation.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame"/> class with the specified ending value. </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame.#ctor(System.Windows.CornerRadius)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame"/> class with the specified ending value. </summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame.#ctor(System.Windows.CornerRadius,System.Windows.Media.Animation.KeyTime)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame"/> class with the specified ending value and key time.</summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
            <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame.CreateInstanceCore">
            <summary>
            Creates a new instance of <see cref="T:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame"/>.
            </summary>
            <returns>A new <see cref="T:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame"/>.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.LinearCornerRadiusKeyFrame.CreateCalculator">
            <summary>
            Creates the appropriate calculator for the animation type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Avalon.Windows.Dialogs.FolderBrowserDialog">
            <summary>
            Prompts the user to select a folder.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Dialogs.FolderBrowserDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Dialogs.FolderBrowserDialog"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Dialogs.FolderBrowserDialog.Reset">
            <summary>
            Resets the properties of a common dialog to their default values.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Dialogs.FolderBrowserDialog.RunDialog(System.IntPtr)">
            <summary>
            Displays the folder browser dialog.
            </summary>
            <param name="hwndOwner">Handle to the window that owns the dialog box.</param>
            <returns>
            If the user clicks the OK button of the dialog that is displayed, true is returned; otherwise, false.
            </returns>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.RootType">
            <summary>
            Gets or sets the type of the root.
            </summary>
            <value>The type of the root.</value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.RootPath">
            <summary>
            Gets or sets the root path.
            <remarks>Valid only if RootType is set to Path.</remarks>
            </summary>
            <value>The root path.</value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.RootSpecialFolder">
            <summary>
            Gets or sets the root special folder.
            <remarks>Valid only if RootType is set to SpecialFolder.</remarks>
            </summary>
            <value>The root special folder.</value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.SelectedPath">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.BrowseFiles">
            <summary>
            Gets or sets a value indicating whether browsing files is allowed.
            </summary>
            <value></value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.ShowEditBox">
            <summary>
            Gets or sets a value indicating whether to show an edit box.
            </summary>
            <value></value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.BrowseShares">
            <summary>
            Gets or sets a value indicating whether browsing shares is allowed.
            </summary>
            <value></value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.ShowStatusText">
            <summary>
            Gets or sets a value indicating whether to show status text.
            </summary>
            <value></value>
        </member>
        <member name="P:Avalon.Windows.Dialogs.FolderBrowserDialog.ValidateResult">
            <summary>
            Gets or sets a value indicating whether to validate the result.
            </summary>
            <value></value>
        </member>
        <member name="T:Avalon.Windows.Media.Effects.BlendEffect">
            <summary>
            An effect that blend two textures.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Effects.BlendEffect.#cctor">
            <summary>
            Initializes the <see cref="T:Avalon.Windows.Media.Effects.BlendEffect"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Effects.BlendEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Effects.BlendEffect"/> class.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Media.Effects.BlendEffect.Input1Property">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Media.Effects.BlendEffect.Input1"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Media.Effects.BlendEffect.Input2Property">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Media.Effects.BlendEffect.Input2"/> dependency property.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.BlendEffect.Input1">
            <summary>
            Gets or sets the first input.
            </summary>
            <value>The first input.</value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.BlendEffect.Input2">
            <summary>
            Gets or sets the second input.
            </summary>
            <value>The second input.</value>
        </member>
        <member name="T:Avalon.Windows.Converters.FormattedTextConverter">
            <summary>
            Converts a string of formatted text to a <see cref="T:System.Windows.Documents.Inline"/>s.
            <remarks>
            Supported markup:
            <list>
            <item>[b] - bold</item>
            <item>[i] - italics</item>
            <item>[u] - underline</item>
            <item>[h url] - hyperlink</item>
            <item>[nl/] - line break</item>
            <item>[/] - close tag</item>
            <item>[[ - escape for '[' character</item>
            </list>
            </remarks>
            </summary>
        </member>
        <member name="M:Avalon.Windows.Converters.FormattedTextConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the GTMT#binding source.</param>
            <param name="targetType">The type of the GTMT#binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Avalon.Windows.Controls.AnimatedTextBlock">
            <summary>
            Provides a control for displaying small amounts of flow content and animating its appearance.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.AnimatedTextBlock.#cctor">
            <summary>
            Initializes the <see cref="T:Avalon.Windows.Controls.AnimatedTextBlock"/> class.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextBlock.SegmentLengthProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AnimatedTextBlock.SegmentLength"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextBlock.ModeProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AnimatedTextBlock.Mode"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextBlock.OrderProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AnimatedTextBlock.Order"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextBlock.DurationProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AnimatedTextBlock.Duration"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextBlock.DelayProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AnimatedTextBlock.Delay"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AnimatedTextBlock.RepeatBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AnimatedTextBlock.RepeatBehavior"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.AnimatedTextBlock.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Avalon.Windows.Controls.AnimatedTextBlock.SegmentLength">
            <summary>
            Gets or sets the length of the segment.
            </summary>
            <value>The length of the segment.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.AnimatedTextBlock.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.AnimatedTextBlock.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>The order.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.AnimatedTextBlock.Duration">
            <summary>
            Gets or sets the segment animation duration.
            </summary>
            <value>The segment animation duration.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.AnimatedTextBlock.Delay">
            <summary>
            Gets or sets the delay between segment animations.
            </summary>
            <value>The delay between segment animations.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.AnimatedTextBlock.RepeatBehavior">
            <summary>
            Gets or sets the repeat behavior.
            </summary>
            <value>The repeat behavior.</value>
        </member>
        <member name="T:Avalon.Windows.Utility.TypeExtension">
            <summary>
            Implements a markup extension that returns a <see cref="P:Avalon.Windows.Utility.TypeExtension.Type"/> based on a string attribute input.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Utility.TypeExtension._closedType">
            <summary>
            The final type returned by the <see cref="M:Avalon.Windows.Utility.TypeExtension.ProvideValue(System.IServiceProvider)"/> method.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Utility.TypeExtension"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Utility.TypeExtension"/> class.
            </summary>
            <param name="typeName">The type name.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Utility.TypeExtension"/> class.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="typeArgument1">The type argument.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.#ctor(System.String,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Utility.TypeExtension"/> class.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="typeArgument1">The first type argument.</param>
            <param name="typeArgument2">The second type argumen2.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.#ctor(System.String,System.Type,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Utility.TypeExtension"/> class.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="typeArgument1">The first type argument.</param>
            <param name="typeArgument2">The second type argument.</param>
            <param name="typeArgument3">The third type argument.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.#ctor(System.String,System.Type,System.Type,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Utility.TypeExtension"/> class.
            </summary>
            <param name="typeName">The type name.</param>
            <param name="typeArgument1">The first type argument.</param>
            <param name="typeArgument2">The second type argument.</param>
            <param name="typeArgument3">The third type argument.</param>
            <param name="typeArgument4">The fourth type argument.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.GetTypeArgument(System.Int32)">
            <summary>
            Gets the type argument at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.SetTypeArgument(System.Int32,System.Type)">
            <summary>
            Sets the type argument at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The type.</param>
        </member>
        <member name="M:Avalon.Windows.Utility.TypeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns the <see cref="P:Avalon.Windows.Utility.TypeExtension.Type"/> value as evaluated for the requested type name and type arguments.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Avalon.Windows.Utility.TypeExtension.TypeName">
            <summary>
            Gets or sets the type name.
            </summary>
            <value>The type name.</value>
        </member>
        <member name="P:Avalon.Windows.Utility.TypeExtension.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Avalon.Windows.Utility.TypeExtension.TypeArguments">
            <summary>
            Gets the type arguments.
            </summary>
            <value>The type arguments.</value>
        </member>
        <member name="P:Avalon.Windows.Utility.TypeExtension.TypeArgument1">
            <summary>
            Gets or sets the first type argument.
            </summary>
            <value>The first type argument.</value>
        </member>
        <member name="P:Avalon.Windows.Utility.TypeExtension.TypeArgument2">
            <summary>
            Gets or sets the second type argument.
            </summary>
            <value>The second type argument.</value>
        </member>
        <member name="P:Avalon.Windows.Utility.TypeExtension.TypeArgument3">
            <summary>
            Gets or sets the third type argument.
            </summary>
            <value>The third type argument.</value>
        </member>
        <member name="P:Avalon.Windows.Utility.TypeExtension.TypeArgument4">
            <summary>
            Gets or sets the fourth type argument.
            </summary>
            <value>The fourth type argument.</value>
        </member>
        <member name="T:Avalon.Windows.Media.Effects.PointLightEffect">
            <summary>
            An effect that colorizes a texture and adds two light points.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Effects.PointLightEffect.#cctor">
            <summary>
            Initializes the <see cref="T:Avalon.Windows.Media.Effects.PointLightEffect"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Effects.PointLightEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Effects.PointLightEffect"/> class.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Media.Effects.PointLightEffect.InputProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Media.Effects.PointLightEffect.Input"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Media.Effects.PointLightEffect.FillColorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Media.Effects.PointLightEffect.FillColor"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Media.Effects.PointLightEffect.Light1PositionProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Media.Effects.PointLightEffect.Light1Position"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Media.Effects.PointLightEffect.Light1ColorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Media.Effects.PointLightEffect.Light1Color"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Media.Effects.PointLightEffect.Light2PositionProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Media.Effects.PointLightEffect.Light2Position"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Media.Effects.PointLightEffect.Light2ColorProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Media.Effects.PointLightEffect.Light2Color"/> dependency property.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.PointLightEffect.Input">
            <summary>
            Gets or sets the input texture.
            </summary>
            <value>The input texture.</value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.PointLightEffect.FillColor">
            <summary>
            Gets or sets the fill color.
            </summary>
            <value>The fill color.</value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.PointLightEffect.Light1Position">
            <summary>
            Gets or sets the first light's position.
            </summary>
            <value>The first light's position.</value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.PointLightEffect.Light1Color">
            <summary>
            Gets or sets the color of the first light.
            </summary>
            <value>The color of the first light.</value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.PointLightEffect.Light2Position">
            <summary>
            Gets or sets the second light's position.
            </summary>
            <value>The second light's position.</value>
        </member>
        <member name="P:Avalon.Windows.Media.Effects.PointLightEffect.Light2Color">
            <summary>
            Gets or sets the color of the second light.
            </summary>
            <value>The color of the second light.</value>
        </member>
        <member name="T:Avalon.Windows.Utility.ColorHelpers">
            <summary>
            Encapsulates methods relating to colors.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.ColorHelpers.GdiToWindows(System.Drawing.Color)">
            <summary>
            Changes a GDI color object to an MIL one.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.ColorHelpers.WindowsToGdi(System.Windows.Media.Color)">
            <summary>
            Changes an MIL color object to a GDI one.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.ColorHelpers.Darken(System.Windows.Media.Color,System.Single)">
            <summary>
            Returns the given color with a darker luminosity.
            </summary>
            <param name="color">The color.</param>
            <param name="factor">The factor.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.ColorHelpers.Lighten(System.Windows.Media.Color,System.Single)">
            <summary>
            Returns the given color with a lighter luminosity.
            </summary>
            <param name="color">The color.</param>
            <param name="factor">The factor.</param>
            <returns></returns>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame">
            <summary>
            Animates from the <see cref="T:System.Windows.CornerRadius"/> value of the previous key frame to its own <see cref="P:KeyFrame{T}.Value"/> using splined interpolation.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame"/> class with the specified ending value.  </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame.#ctor(System.Windows.CornerRadius)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame"/> class with the specified ending value.  </summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame.#ctor(System.Windows.CornerRadius,System.Windows.Media.Animation.KeyTime)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame"/> class with the specified ending value and key time. </summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
            <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame.#ctor(System.Windows.CornerRadius,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame"/> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline"/>. </summary>
            <param name="keySpline"><see cref="T:System.Windows.Media.Animation.KeySpline"/> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline"/> represents a Bezier curve which defines animation progress of the key frame.</param>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
            <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame.CreateInstanceCore">
            <summary>
            Creates a new instance of <see cref="T:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame"/>.
            </summary>
            <returns>A new <see cref="T:Avalon.Windows.Media.Animation.SplineKeyFrame`1"/>.</returns>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.SplineCornerRadiusKeyFrame.CreateCalculator">
            <summary>
            Creates the appropriate calculator for the animation type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Avalon.Windows.Controls.NotifyBalloonIcon">
            <summary>
            Defines a set of standardized icons that can be associated with a balloon tip.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyBalloonIcon.None">
            <summary>
            No icon.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyBalloonIcon.Info">
            <summary>
            An information icon.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyBalloonIcon.Warning">
            <summary>
            A warning icon.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyBalloonIcon.Error">
            <summary>
            An error icon.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Controls.AutoGrid">
            <summary>
            Defines a flexible grid area that consists of columns and rows.
            Depending on the orientation, either the rows or the columns are auto-generated,
            and the children's position is set according to their index.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AutoGrid._shouldReindex">
            <summary>
            A value of <c>true</c> forces children to be re-indexed at the next oportunity.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AutoGrid.IsAutoIndexingProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AutoGrid.IsAutoIndexing"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AutoGrid.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AutoGrid.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AutoGrid.ChildMarginProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AutoGrid.ChildMargin"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AutoGrid.ChildHorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AutoGrid.ChildHorizontalAlignment"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.AutoGrid.ChildVerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.AutoGrid.ChildVerticalAlignment"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.AutoGrid.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Grid"/> in anticipation of arranging them during the <see cref="M:ArrangeOverride"/> pass.
            </summary>
            <param name="constraint">Indicates an upper limit size that should not be exceeded.</param>
            <returns>
            	<see cref="T:System.Windows.Size"/> that represents the required size to arrange child content.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Controls.AutoGrid.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Called when the visual children of a <see cref="T:System.Windows.Controls.Grid"/> element change.
            <remarks>Used to mark that the grid children have changed.</remarks>
            </summary>
            <param name="visualAdded">Identifies the visual child that's added.</param>
            <param name="visualRemoved">Identifies the visual child that's removed.</param>
        </member>
        <member name="P:Avalon.Windows.Controls.AutoGrid.IsAutoIndexing">
            <summary>
            Gets or sets a value indicating whether the children are automatically indexed.
            <remarks>
            The default is <c>true</c>.
            Note that if children are already indexed, setting this property to <c>false</c> will not remove their indices.
            </remarks>
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.AutoGrid.Orientation">
            <summary>
            Gets or sets the orientation.
            <remarks>The default is Vertical.</remarks>
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.AutoGrid.ChildMargin">
            <summary>
            Gets or sets the child margin.
            </summary>
            <value>The child margin.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.AutoGrid.ChildHorizontalAlignment">
            <summary>
            Gets or sets the child horizontal alignment.
            </summary>
            <value>The child horizontal alignment.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.AutoGrid.ChildVerticalAlignment">
            <summary>
            Gets or sets the child vertical alignment.
            </summary>
            <value>The child vertical alignment.</value>
        </member>
        <member name="T:Avalon.Windows.Controls.TaskDialogButtonTemplateSelector">
            <summary>
            Selects the appropriate template for a <see cref="T:Avalon.Windows.Controls.TaskDialogButtonData"/> item.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.TaskDialogButtonTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns a <see cref="T:System.Windows.DataTemplate"/> for <see cref="T:Avalon.Windows.Controls.TaskDialogButtonData"/>.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns></returns>
        </member>
        <member name="T:Avalon.Windows.Utility.UIHelpers">
            <summary>
            Encapsulates methods for manipulation of the visual tree.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.EnsureAccess(System.Reflection.MethodBase)">
            <summary>
            Ensures the calling thread is the thread associated with the <see cref="T:System.Windows.Threading.Dispatcher"/>.
            </summary>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.EnsureAccess(System.Reflection.MethodBase,System.Object[])">
            <summary>
            Ensures the calling thread is the thread associated with the <see cref="T:System.Windows.Threading.Dispatcher"/>.
            </summary>
            <param name="method">The method.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.EnsureAccess(System.Reflection.MethodBase,System.Object)">
            <summary>
            Ensures the calling thread is the thread associated with the <see cref="T:System.Windows.Threading.Dispatcher"/>.
            </summary>
            <param name="method">The method.</param>
            <param name="o">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.EnsureAccess(System.Reflection.MethodBase,System.Object,System.Object[])">
            <summary>
            Ensures the calling thread is the thread associated with the <see cref="T:System.Windows.Threading.Dispatcher"/>.
            </summary>
            <param name="method">The method.</param>
            <param name="o">The object.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.EnsureAccess(System.Windows.Threading.Dispatcher,System.Reflection.MethodBase,System.Object,System.Object[])">
            <summary>
            Ensures the calling thread is the thread associated with the <see cref="T:System.Windows.Threading.Dispatcher"/>.
            </summary>
            <param name="dispatcher">The dispatcher.</param>
            <param name="method">The method.</param>
            <param name="o">The object.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.EnsureAccess(System.Windows.Threading.DispatcherObject,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Ensures the calling thread is the thread associated with the <see cref="T:System.Windows.Threading.Dispatcher"/>.
            </summary>
            <param name="o">The object.</param>
            <param name="method">The method.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.GetLogicalParent(System.Windows.DependencyObject)">
            <summary>
             Gets the logical parent of the specified element.
            </summary>
            <param name="o">The element.</param>
            <returns>The parent of the element.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindLogicalAncestor(System.Windows.DependencyObject,System.Func{System.Object,System.Boolean})">
            <summary>
            Finds the logical ancestor according to <paramref name="predicate"/>.
            </summary>
            <param name="startElement">The start element.</param>
            <param name="predicate">The condition.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindLogicalAncestorsByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds an element's logical ancestors of a specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startElement">The start element.</param>
            <returns>The logical ancestors.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindLogicalAncestorsByType``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Finds an element's logical ancestors of a specified type that match the specified predicate.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startElement">The start element.</param>
            <param name="predicate">The condition.</param>
            <returns>The matching logical ancestors.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindLogicalDescendantsByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds an element's logical descendants of a specified type.
            </summary>
            <typeparam name="T">The type of descendant.</typeparam>
            <param name="startElement">The start element.</param>
            <returns>The logical descendants.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindLogicalDescendantsByType``1(System.Windows.DependencyObject,System.Func{System.Object,System.Boolean})">
            <summary>
            Finds an element's logical descendants of a specified type that match the specified condition.
            </summary>
            <typeparam name="T">The type of descendant.</typeparam>
            <param name="startElement">The start element.</param>
            <param name="predicate">The condition.</param>
            <returns>The logical descendants.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindLogicalAncestorByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds the logical ancestor by type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startElement">The start element.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindLogicalRoot(System.Windows.DependencyObject)">
            <summary>
            Finds the logical root.
            </summary>
            <param name="startElement">The start element.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualAncestor(System.Windows.DependencyObject,System.Func{System.Object,System.Boolean})">
            <summary>
            Finds the visual ancestor according to The condition.
            </summary>
            <param name="startElement">The start element.</param>
            <param name="predicate">The condition.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualAncestorByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds the visual ancestor by type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startElement">The start element.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualAncestorsByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds an element's visual ancestors of a specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startElement">The start element.</param>
            <returns>The visual ancestors.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualAncestorsByType``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Finds an element's visual ancestors of a specified type that match the specified predicate.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startElement">The start element.</param>
            <param name="predicate">The condition.</param>
            <returns>The matching visual ancestors.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualDescendant(System.Windows.DependencyObject,System.Func{System.Object,System.Boolean})">
            <summary>
            Finds the visual descendant.
            </summary>
            <param name="startElement">The start element.</param>
            <param name="predicate">The condition.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualDescendantsByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds an element's visual descendants of a specified type.
            </summary>
            <typeparam name="T">The type of descendant.</typeparam>
            <param name="startElement">The start element.</param>
            <returns>The visual descendants.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualDescendantsByType``1(System.Windows.DependencyObject,System.Func{System.Object,System.Boolean})">
            <summary>
            Finds an element's visual descendants of a specified type that match the specified condition.
            </summary>
            <typeparam name="T">The type of descendant.</typeparam>
            <param name="startElement">The start element.</param>
            <param name="predicate">The condition.</param>
            <returns>The visual descendants.</returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualDescendantByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds the visual descendant by type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startElement">The start element.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.FindVisualRoot(System.Windows.DependencyObject)">
            <summary>
            Finds the visual root.
            </summary>
            <param name="startElement">The start element.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Gets the visual children.
            </summary>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.EnsureDpiData">
            <summary>
            Safely gets the system DPI. Using <see cref="T:System.Windows.PresentationSource"/> will not work in partial trust.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.GetItemContainers(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the generated containers of all items in an <see cref="T:System.Windows.Controls.ItemsControl"/>.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.UIHelpers.LaunchBrowser(System.Uri)">
            <summary>
            Launches the browser.
            <remarks>Provides accidental click flood protection.</remarks>
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="P:Avalon.Windows.Utility.UIHelpers.DpiTransformToDevice">
            <summary>
            Gets a matrix that transforms the coordinates of this target to the device that is associated with the rendering destination.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Utility.UIHelpers.DpiTransformFromDevice">
            <summary>
            Gets a matrix that transforms the coordinates of the device that is associated with the rendering destination of this target.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Utility.UIHelpers.DpiX">
            <summary>
            Gets the system horizontal dots per inch (dpi).
            </summary>
        </member>
        <member name="P:Avalon.Windows.Utility.UIHelpers.DpiY">
            <summary>
            Gets the system vertical dots per inch (dpi).
            </summary>
        </member>
        <member name="P:Avalon.Windows.Utility.UIHelpers.IsAutomaticBrowserLaunchEnabled">
            <summary>
            Gets or sets a value indicating whether clicking a <see cref="T:System.Windows.Documents.Hyperlink"/> that has a URI
            automatically launches the browser.
            </summary>
            <value>
            	<c>true</c> if the browser is launched automatically; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="T:Avalon.Windows.Controls.NotifyIcon">
            <summary>
            Specifies a component that creates an icon in the notification area.
            <remarks>
            When used in a visual tree, the <see cref="P:IsVisible"/> property will trigger the icon.
            If you want to override this behavior (e.g. show the icon even when it's not part of a visual tree),
            set the <see cref="P:Visibility"/> to <see cref="F:System.Windows.Visibility.Hidden"/>.
            To hide the icon in any state, set the <see cref="P:Visibility"/> to <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </remarks>
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.BalloonTipClickEvent">
            <summary>
            Identifies the <see cref="E:Avalon.Windows.Controls.NotifyIcon.BalloonTipClick"/> routed event.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.BalloonTipClosedEvent">
            <summary>
            Identifies the <see cref="E:Avalon.Windows.Controls.NotifyIcon.BalloonTipClosed"/> routed event.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.BalloonTipShownEvent">
            <summary>
            Identifies the <see cref="E:Avalon.Windows.Controls.NotifyIcon.BalloonTipShown"/> routed event.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.ClickEvent">
            <summary>
            Identifies the <see cref="E:Avalon.Windows.Controls.NotifyIcon.Click"/> routed event.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.DoubleClickEvent">
            <summary>
            Identifies the <see cref="E:Avalon.Windows.Controls.NotifyIcon.DoubleClick"/> routed event.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.MouseClickEvent">
            <summary>
            Identifies the <see cref="E:Avalon.Windows.Controls.NotifyIcon.MouseClick"/> routed event.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.MouseDoubleClickEvent">
            <summary>
            Identifies the <see cref="E:Avalon.Windows.Controls.NotifyIcon.MouseDoubleClick"/> routed event.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.NotifyIcon.#cctor">
            <summary>
            Initializes the <see cref="T:Avalon.Windows.Controls.NotifyIcon"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.NotifyIcon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalon.Windows.Controls.NotifyIcon"/> class.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.NotifyIcon.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Avalon.Windows.Controls.NotifyIcon"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.NotifyIcon.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.NotifyIcon.ShowBalloonTip(System.Int32)">
            <summary>
            Displays a balloon tip in the taskbar for the specified time period.
            </summary>
            <param name="timeout">The time period, in milliseconds, the balloon tip should display.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.NotifyIcon.ShowBalloonTip(System.Int32,System.String,System.String,Avalon.Windows.Controls.NotifyBalloonIcon)">
            <summary>
            Displays a balloon tip with the specified title, text, and icon in the taskbar for the specified time period.
            </summary>
            <param name="timeout">The time period, in milliseconds, the balloon tip should display.</param>
            <param name="tipTitle">The title to display on the balloon tip.</param>
            <param name="tipText">The text to display on the balloon tip.</param>
            <param name="tipIcon">One of the <see cref="T:Avalon.Windows.Controls.NotifyBalloonIcon"/> values.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.NotifyIcon.UpdateIconForVisibility">
            <summary>
            Shows or hides the icon according to the <see cref="P:IsVisible"/> and <see cref="P:Visibility"/> properties.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.BalloonTipIconProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.NotifyIcon.BalloonTipIcon"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.BalloonTipTextProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.NotifyIcon.BalloonTipText"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.BalloonTipTitleProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.NotifyIcon.BalloonTipTitle"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.TextProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.NotifyIcon.Text"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.NotifyIcon.IconProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.NotifyIcon.Icon"/> dependency property.
            </summary>
        </member>
        <member name="E:Avalon.Windows.Controls.NotifyIcon.BalloonTipClick">
            <summary>
            Occurs when the balloon tip is clicked.
            </summary>
        </member>
        <member name="E:Avalon.Windows.Controls.NotifyIcon.BalloonTipClosed">
            <summary>
            Occurs when the balloon tip is closed by the user.
            </summary>
        </member>
        <member name="E:Avalon.Windows.Controls.NotifyIcon.BalloonTipShown">
            <summary>
            Occurs when the balloon tip is displayed on the screen.
            </summary>
        </member>
        <member name="E:Avalon.Windows.Controls.NotifyIcon.Click">
            <summary>
            Occurs when the user clicks the icon in the notification area.
            </summary>
        </member>
        <member name="E:Avalon.Windows.Controls.NotifyIcon.DoubleClick">
            <summary>
            Occurs when the user double-clicks the icon in the notification area of the taskbar.
            </summary>
        </member>
        <member name="E:Avalon.Windows.Controls.NotifyIcon.MouseClick">
            <summary>
            Occurs when the user clicks a <see cref="T:Avalon.Windows.Controls.NotifyIcon"/> with the mouse.
            </summary>
        </member>
        <member name="E:Avalon.Windows.Controls.NotifyIcon.MouseDoubleClick">
            <summary>
            Occurs when the user double-clicks the <see cref="T:Avalon.Windows.Controls.NotifyIcon"/> with the mouse.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.NotifyIcon.BalloonTipIcon">
            <summary>
            Gets or sets the icon to display on the balloon tip.
            </summary>
            <value>The balloon tip icon.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.NotifyIcon.BalloonTipText">
            <summary>
            Gets or sets the text to display on the balloon tip.
            </summary>
            <value>The balloon tip text.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.NotifyIcon.BalloonTipTitle">
            <summary>
            Gets or sets the title of the balloon tip.
            </summary>
            <value>The balloon tip title.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.NotifyIcon.Text">
            <summary>
            Gets or sets the tooltip text displayed when the mouse pointer rests on a notification area icon.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Avalon.Windows.Controls.NotifyIcon.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
            <value>The icon.</value>
        </member>
        <member name="T:Avalon.Internal.Utility.ArgumentValidator">
            <summary>
            Encapsulates methods for method arguments validation.
            </summary>
        </member>
        <member name="M:Avalon.Internal.Utility.ArgumentValidator.NotNullOrEmptyString(System.String,System.String)">
            <summary>
            Checks a string argument to ensure it isn't null or empty
            </summary>
            <param name="argumentValue">The argument value to check.</param>
            <param name="argumentName">The name of the argument.</param>
        </member>
        <member name="M:Avalon.Internal.Utility.ArgumentValidator.NotNull(System.Object,System.String)">
            <summary>
            Checks an argument to ensure it isn't null
            </summary>
            <param name="argumentValue">The argument value to check.</param>
            <param name="argumentName">The name of the argument.</param>
        </member>
        <member name="M:Avalon.Internal.Utility.ArgumentValidator.EnumValueIsDefined(System.Type,System.Object,System.String)">
            <summary>
            Checks an Enum argument to ensure that its value is defined by the specified Enum type.
            </summary>
            <param name="enumType">The Enum type the value should correspond to.</param>
            <param name="value">The value to check for.</param>
            <param name="argumentName">The name of the argument holding the value.</param>
        </member>
        <member name="M:Avalon.Internal.Utility.ArgumentValidator.TypeIsAssignableFromType(System.Type,System.Type,System.String)">
            <summary>
            Verifies that an argument type is assignable from the provided type (meaning
            interfaces are implemented, or classes exist in the base class hierarchy).
            </summary>
            <param name="assignee">The argument type.</param>
            <param name="providedType">The type it must be assignable from.</param>
            <param name="argumentName">The argument name.</param>
        </member>
        <member name="T:Avalon.Windows.Dialogs.RootType">
            <summary>
            Specifies the type of the root folder in a <see cref="T:Avalon.Windows.Dialogs.FolderBrowserDialog"/>.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Dialogs.RootType.SpecialFolder">
            <summary>
            Use <see cref="T:System.Environment.SpecialFolder"/>.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Dialogs.RootType.Path">
            <summary>
            Use a path.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Converters.DarkColorConverter">
            <summary>
            Converts a <see cref="T:System.Windows.Media.Color"/> to a <see cref="T:System.Windows.Media.Color"/> with a lower brightness.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Converters.DarkColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the GTMT#binding source.</param>
            <param name="targetType">The type of the GTMT#binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Converters.DarkColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            <remarks>Not implemented.</remarks>
            </summary>
            <param name="value">The value that is produced by the GTMT#binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="P:Avalon.Windows.Converters.DarkColorConverter.Factor">
            <summary>
            Gets or sets the factor.
            </summary>
            <value>The factor.</value>
        </member>
        <member name="T:Avalon.Windows.Controls.TaskDialogButtons">
            <summary>
            Specifies standard buttons for the <see cref="T:Avalon.Windows.Controls.TaskDialog"/>.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogButtons.None">
            <summary>
            No buttons; an empty selection.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogButtons.OK">
            <summary>
            OK button.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogButtons.Cancel">
            <summary>
            Cancel button.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogButtons.Yes">
            <summary>
            Yes button.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogButtons.No">
            <summary>
            No button.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogButtons.Retry">
            <summary>
            Retry button.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.TaskDialogButtons.Close">
            <summary>
            Close button.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Controls.GdiTextQuality">
            <summary>
            Specifies the quality of text rendering.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextQuality.SystemDefault">
            <summary>
            Each character is drawn using its glyph bitmap, with the system default rendering
            hint. The text will be drawn using whatever font-smoothing settings the user
            has selected for the system.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextQuality.SingleBitPerPixelGridFit">
            <summary>
            Each character is drawn using its glyph bitmap. Hinting is used to improve
            character appearance on stems and curvature.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextQuality.SingleBitPerPixel">
            <summary>
            Each character is drawn using its glyph bitmap. Hinting is not used.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextQuality.AntiAliasGridFit">
            <summary>
            Each character is drawn using its antialiased glyph bitmap with hinting.
            Much better quality due to antialiasing, but at a higher performance cost.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextQuality.AntiAlias">
            <summary>
            Each character is drawn using its antialiased glyph bitmap without hinting.
            Better quality due to antialiasing. Stem width differences may be noticeable
            because hinting is turned off.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextQuality.ClearTypeGridFit">
            <summary>
            Each character is drawn using its glyph ClearType bitmap with hinting. The
            highest quality setting. Used to take advantage of ClearType font features.
            </summary>
        </member>
        <member name="T:Avalon.Windows.Controls.GdiTextBlock">
            <summary>
            Provides a control for displaying small amounts of aliased flow text content.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.TextProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.Text"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.TextQualityProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.TextQuality"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.TextAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.TextAlignment"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.TextWrappingProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.TextWrapping"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.TextTrimmingProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.TextTrimming"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.FontFamilyProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.FontFamily"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.FontStyleProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.FontStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.FontWeightProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.FontWeight"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.FontSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Avalon.Windows.Controls.GdiTextBlock.ForegroundProperty">
            <summary>
            Identifies the <see cref="P:Avalon.Windows.Controls.GdiTextBlock.Foreground"/> dependency property.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Avalon.Windows.Controls.GdiTextBlock"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and (optinally) managed resources.
            </summary>
            <param name="isDisposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.GetVisualChild(System.Int32)">
            <summary>
            Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)"/>, and returns a child at the specified index from a collection of child elements.
            </summary>
            <param name="index">The zero-based index of the requested child element in the collection.</param>
            <returns>
            The requested child element. This should not return null; if the provided index is out of range, an exception is thrown.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size in layout required for the bitmap control and determines a size.
            <remarks>
            Also creates the GDI bitmap that contains the text.
            </remarks>
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions the bitmap control and determines the final size.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.CreateBitmapSource(System.Drawing.Bitmap)">
            <summary>
            Creates a <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> from a <see cref="T:System.Drawing.Bitmap"/>.
            <remarks>
            </remarks>
            </summary>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.SlowCreateBitmapSource(System.Drawing.Bitmap)">
            <summary>
            Creates a <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> from a <see cref="T:System.Drawing.Bitmap"/>.
            <remarks>
            Uses the slow (but safe) <see cref="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)"/>.
            </remarks>
            </summary>
            <param name="bitmap">The bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.FastCreateBitmapSource(System.Drawing.Bitmap)">
            <summary>
            Creates a <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> from a <see cref="T:System.Drawing.Bitmap"/>.
            <remarks>
            This method seems to be much faster and consumes significantly less memory than <see cref="T:System.Windows.Interop.InteropBitmap"/>.
            </remarks>
            </summary>
            <param name="bitmap">The bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.CreateDrawingObjects(System.Single)">
            <summary>
            Creates the System.Drawing objects required to create the text bitmap.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Controls.GdiTextBlock.DisposeDrawingObjects">
            <summary>
            Disposes the System.Drawing objects.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.Text">
            <summary>
            Gets or sets the text contents of an <see cref="T:Avalon.Windows.Controls.GdiTextBlock"/>.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.TextQuality">
            <summary>
            Gets or sets a value that indicates the quality of the rendered text.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.TextAlignment">
            <summary>
            Gets or sets a value that indicates the horizontal alignment of text content.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.TextWrapping">
            <summary>
            Gets or sets how the <see cref="T:Avalon.Windows.Controls.GdiTextBlock"/> should wrap text.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.TextTrimming">
            <summary>
            Gets or sets the text trimming behavior to employ when content overflows the content area.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.FontFamily">
            <summary>
            Gets or sets the preferred top-level font family for the <see cref="T:Avalon.Windows.Controls.GdiTextBlock"/>.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.FontStyle">
            <summary>
            Gets or sets the top-level font style for the <see cref="T:Avalon.Windows.Controls.GdiTextBlock"/>.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.FontWeight">
            <summary>
            Gets or sets the top-level font weight for the <see cref="T:Avalon.Windows.Controls.GdiTextBlock"/>.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.FontSize">
            <summary>
            Gets or sets the top-level font size for the <see cref="T:Avalon.Windows.Controls.GdiTextBlock"/>.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.Foreground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.SolidColorBrush"/> to apply to the text contents of the <see cref="T:Avalon.Windows.Controls.GdiTextBlock"/>.
            </summary>
        </member>
        <member name="P:Avalon.Windows.Controls.GdiTextBlock.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements within this element.
            </summary>
            <value></value>
            <returns>
            The number of visual child elements for this element.
            </returns>
        </member>
        <member name="T:Avalon.Windows.Utility.DependencyHelpers">
            <summary>
            Encapsulates methods for dealing with dependency objects and properties.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Utility.DependencyHelpers.GetDependencyProperty(System.Type,System.String)">
            <summary>
            Gets the dependency property according to its name.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.DependencyHelpers.GetDependencyProperty(System.Windows.DependencyObject,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Windows.DependencyProperty"/> using reflection.
            </summary>
            <param name="o"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Avalon.Windows.Utility.DependencyHelpers.SetIfDefault``1(System.Windows.DependencyObject,System.Windows.DependencyProperty,``0)">
            <summary>
            Sets the value of the <paramref name="property"/> only if it hasn't been explicitely set.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="o">The object.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame">
            <summary>
            Animates from the <see cref="T:System.Windows.CornerRadius"/> value of the previous key frame to its own <see cref="P:KeyFrame{T}.Value"/> using discrete interpolation.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame"/> class with the specified ending value. </summary>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame.#ctor(System.Windows.CornerRadius)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame"/> class with the specified ending value. </summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame.#ctor(System.Windows.CornerRadius,System.Windows.Media.Animation.KeyTime)">
            <summary>Initializes a new instance of the <see cref="T:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame"/> class with the specified ending value and key time.</summary>
            <param name="value">Ending value (also known as "target value") for the key frame.</param>
            <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
        </member>
        <member name="M:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame.CreateInstanceCore">
            <summary>
            Creates a new instance of <see cref="T:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame"/>.
            </summary>
            <returns>
            A new <see cref="T:Avalon.Windows.Media.Animation.DiscreteCornerRadiusKeyFrame"/>.
            </returns>
        </member>
        <member name="T:Avalon.Windows.Converters.LightColorConverter">
            <summary>
            Converts a <see cref="T:System.Windows.Media.Color"/> to a <see cref="T:System.Windows.Media.Color"/> with a higher brightness.
            </summary>
        </member>
        <member name="M:Avalon.Windows.Converters.LightColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the GTMT#binding source.</param>
            <param name="targetType">The type of the GTMT#binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Avalon.Windows.Converters.LightColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            <remarks>Not implemented.</remarks>
            </summary>
            <param name="value">The value that is produced by the GTMT#binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="P:Avalon.Windows.Converters.LightColorConverter.Factor">
            <summary>
            Gets or sets the factor.
            </summary>
            <value>The factor.</value>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
